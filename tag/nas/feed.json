{
    "version": "https://jsonfeed.org/version/1",
    "title": "命运转轮 • All posts by \"nas\" tag",
    "description": "不曾亏欠, 不曾辜负, 如此足矣",
    "home_page_url": "https://arachnid.cc",
    "items": [
        {
            "id": "https://arachnid.cc/docker-deployment-of-jellyfin/",
            "url": "https://arachnid.cc/docker-deployment-of-jellyfin/",
            "title": "docker 部署之 jellyfin 家庭影院",
            "date_published": "2025-03-19T11:11:35.000Z",
            "content_html": "<blockquote>\n<p>Version：<a href=\"https://github.com/paperless-ngx/paperless-ngx/tree/v2.16.3\"><strong>Paperless-ngx</strong></a> 10.10.6</p>\n</blockquote>\n<p><img data-src=\"image-20250814212532995.png\" alt=\"image-20250814212532995\" /></p>\n<h1 id=\"介绍\"><a class=\"anchor\" href=\"#介绍\">#</a> 介绍</h1>\n<p>目前市面上比较主流的家庭媒体服务器的选择主要有三个：Plex、Emby 和 Jellyfin；其中前两款对于基本使用免费，但对于像通过显卡硬件解码等功能是需付费订阅才能使用；而 Jellyfin 是 Emby 某个版本开源后独立出来的一个影音服务软件，是完全开源和免费的。Jellyfin 在一些大佬改装配置好驱动后能适应不同的显卡硬转，以此达到在外网播放的情况下使用硬件转码流畅播放。</p>\n<p>官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qZWxseWZpbi5vcmcv\">https://jellyfin.org/</span></p>\n<p><img data-src=\"image-20250814210117624.png\" alt=\"image-20250814210117624\" /></p>\n<h1 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h1>\n<p>为你的 jellyfin 存放创建缓存和配置文件夹：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># $PATH 为你的影视存放路径</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /app/jellyfin</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /app/jellyfin</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> cache config</pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /<span class=\"token operator\">&lt;</span><span class=\"token environment constant\">$PATH</span><span class=\"token operator\">></span>/media</pre></td></tr></table></figure><h2 id=\"硬解支持\"><a class=\"anchor\" href=\"#硬解支持\">#</a> 硬解支持</h2>\n<p>要让 jellyfin 的 docker 容器调用核显驱动（即人们常说的开启硬解），要满足两个条件：</p>\n<ol>\n<li>拥有支持视频解码的核心显卡，且核心显卡的<strong>驱动程序</strong>运行正常；</li>\n<li>将核显驱动<strong>直通</strong>给 docker 容器，并赋予 docker 容器调用该驱动的权限。</li>\n</ol>\n<p>对于系统是否满足上述第一个条件，可以输入以下命令进行检验：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[user@localhost] #\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> /dev/dri</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre>total <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre>drwxr-xr-x <span class=\"token number\">2</span> root root         <span class=\"token number\">80</span> Jun <span class=\"token number\">20</span> 02:04 by-path</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre>crw-rw---- <span class=\"token number\">1</span> root video  <span class=\"token number\">226</span>,   <span class=\"token number\">0</span> Jun <span class=\"token number\">20</span> 02:04 card0</pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"\"></td><td><pre>crw-rw---- <span class=\"token number\">1</span> root render <span class=\"token number\">226</span>, <span class=\"token number\">128</span> Jun <span class=\"token number\">20</span> 02:04 renderD128</pre></td></tr></table></figure><p>终端返回的结果有  <code>renderD128</code>  ，那么它即对应你的核显，硬件系统满足视频解码的基本条件。</p>\n<p>接下来为这个核显驱动授予 docker 容器的驱动权限；从上面可以看到  <code>crw-rw---- 1 root render  226</code>  中， <code>root</code>  为管理用户，  <code>render</code>  为所在组，如果你不想麻烦可以在部署的时候直接赋予 root 权限，若是想分组或分用户管理，那就需要分别获取对应的用户 UID 或所属组 GID，通过如下命令获取（不同发行版请根据对应命令获取）：</p>\n<p>获取 UID：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># &lt;GROUP> 为查询的用户</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[user@localhost] #\"></td><td><pre><span class=\"token function\">id</span> <span class=\"token parameter variable\">-u</span> <span class=\"token operator\">&lt;</span>USER_NAME<span class=\"token operator\">></span></pre></td></tr></table></figure><p>获取 GID：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># &lt;GROUP> 为查询的组名</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[user@localhost] #\"></td><td><pre>getent group <span class=\"token operator\">&lt;</span>GROUP_NAME<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d: <span class=\"token parameter variable\">-f3</span></pre></td></tr></table></figure><p>运行 Docker：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">docker</span> pull nyanmisaka/jellyfin:latest</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre>  <span class=\"token parameter variable\">--name</span><span class=\"token operator\">=</span>jellyfin <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"\"></td><td><pre>  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">PUID</span><span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td data-command=\"\"></td><td><pre>  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">PGID</span><span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td data-command=\"\"></td><td><pre>  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">TZ</span><span class=\"token operator\">=</span>Asia/Shanghai <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td data-command=\"\"></td><td><pre>  <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8096</span>:8096 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td data-command=\"\"></td><td><pre>  <span class=\"token parameter variable\">-v</span> /app/jellyfin/config:/config <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td data-command=\"\"></td><td><pre>  <span class=\"token parameter variable\">-v</span> /app/jellyfin/cache:/cache <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td data-command=\"\"></td><td><pre>  <span class=\"token parameter variable\">--mount</span> <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>bind,source<span class=\"token operator\">=</span>/srv/dev-disk-by-uuid-fb7da335-33b8-4fac-8bbe-24c4cd13ccf7/media,destination<span class=\"token operator\">=</span>/media,ro<span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"12\"></td><td data-command=\"\"></td><td><pre>  <span class=\"token parameter variable\">--device</span><span class=\"token operator\">=</span>/dev/dri/renderD128 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"13\"></td><td data-command=\"\"></td><td><pre>  <span class=\"token parameter variable\">--restart</span> always <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"14\"></td><td data-command=\"\"></td><td><pre>  nyanmisaka/jellyfin</pre></td></tr></table></figure><p>note：如果有需要用到不同的管理用户或管理组，那么在使用硬解的前提，需要获取对应 UID 和 GID 填写到部署上，否则后面使用硬解将会有问题，具体获取看上面。</p>\n<h1 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h1>\n<p>通过浏览器访问：  <code>http://localhost:8096</code>  ，按照指示一步步初始化配置：</p>\n<p><img data-src=\"image-20250816144652927.png\" alt=\"image-20250816144652927\" /></p>\n<p>配置你的管理员账号：</p>\n<p><img data-src=\"image-20250816144721170.png\" alt=\"image-20250816144721170\" /></p>\n<p>设置媒体读取路径，这里可以先跳过，后面进入控制台设置：</p>\n<p><img data-src=\"image-20250816144851150.png\" alt=\"image-20250816144851150\" /></p>\n<p>如需云端访问，可开启以下设置：</p>\n<p><img data-src=\"image-20250816145031703.png\" alt=\"image-20250816145031703\" /></p>\n<p>最后完成初始配置后，即可重新登录进入主界面：</p>\n<p><img data-src=\"image-20250816145114308.png\" alt=\"image-20250816145114308\" /></p>\n<p><img data-src=\"image-20250816145443332.png\" alt=\"image-20250816145443332\" /></p>\n<h2 id=\"硬解配置\"><a class=\"anchor\" href=\"#硬解配置\">#</a> 硬解配置</h2>\n<p>点击左上角：</p>\n<p><img data-src=\"image-20250816094625543.png\" alt=\"image-20250816094625543\" /></p>\n<p>进入 &quot;控制台&quot; ：</p>\n<p><img data-src=\"image-20250816094722765.png\" alt=\"image-20250816094722765\" /></p>\n<p>在 jellyfin 容器中的 shell 终端执行：</p>\n<pre><code>ls /dev/dri\n</code></pre>\n<p>确认显卡直通，正常将会显示：</p>\n<p><img data-src=\"image-20250816105816703.png\" alt=\"image-20250816105816703\" /></p>\n<p>记录并配置解码器：</p>\n<p><img data-src=\"image-20250816095148702.png\" alt=\"image-20250816095148702\" /></p>\n<p>note：</p>\n<ol>\n<li>硬件加速这里：下拉选择 &quot;Video Acceleartion API (VAAP)&quot; 或者 &quot;Intel QuickSync (QSV)&quot; ，不是太老的核 / 独显卡，建议选 QSV；</li>\n<li>如果播放失败，则可以尝试关闭 &quot;启用低电压模式的 Intel H.264 硬件编码器&quot; 和 &quot;启用低电压模式的 Intel HEVC 硬件编码器&quot; ;</li>\n<li>如需播放杜比视界，必须关闭 &quot;启用 VPP 色调映射&quot; ;</li>\n<li>如需支持杜比视界格式的 HDR 视频，则必须打开 &quot;首选系统原生的 DXVA 或 VA-API 硬件解码器&quot; ;</li>\n<li>最后根据实际情况选中 &quot;允许实时提取字幕&quot; 和 &quot;限制转码速度&quot; ；</li>\n</ol>\n<p>测试转码：</p>\n<p><img data-src=\"image-20250816105231987.png\" alt=\"image-20250816105231987\" /></p>\n<p><img data-src=\"image-20250816103820476.png\" alt=\"image-20250816103820476\" /></p>\n<p>硬解码资源占用：</p>\n<p><img data-src=\"image-20250816104002038.png\" alt=\"image-20250816104002038\" /></p>\n<p>如果不使用硬解码，那么你将会看到 CPU 占用 95% 以上的使用率，并且对于低性能 CPU 来说，将会播放卡顿：</p>\n<p><img data-src=\"image-20250816104339045.png\" alt=\"image-20250816104339045\" /></p>\n<h2 id=\"添加插件\"><a class=\"anchor\" href=\"#添加插件\">#</a> 添加插件</h2>\n<p><code>控制台</code>  -&gt;  <code>目录</code>  -&gt;  <code>存储库</code>  -&gt; 点击加号进行添加</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># Jellyfin Stable</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>http://fra1.mirror.jellyfin.org/releases/plugin/manifest-stable.json</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre># jellyfin-plugin-metashark</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>https://github.com/cxfksword/jellyfin-plugin-metashark/releases/download/manifest/manifest.json</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre># jellyfin-plugin-metatube</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>https://raw.githubusercontent.com/metatube-community/jellyfin-plugin-metatube/dist/manifest.json</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre># jellyfin-plugin-bangumi</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>https://kookxiang.github.io/jellyfin-plugin-bangumi/repository.json</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre># jellyfin-plugin-manifest</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>https://raw.githubusercontent.com/danieladov/JellyfinPluginManifest/master/manifest.json</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre># jellyfin-plugins-manifest</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>https://www.iamparadox.dev/jellyfin/plugins/manifest.json</pre></td></tr></table></figure><p>如果加载完以上插件后，可以按需安装相应插件，一般用以下插件足矣：</p>\n<p><img data-src=\"image-20250816110312936.png\" alt=\"image-20250816110312936\" /></p>\n<ol>\n<li>File Transformation 和 Media Bar 是用于配置主题的，也即前面看到的电影背景封面及简介显示的轮播滚动。</li>\n<li>SkinManager 同样也是配置主题，目前里面支持九个主题配置。</li>\n<li>Bangumi 主要用于动漫刮削及动漫信息同步。</li>\n<li>MetaShark 和 MetaTube 则是用于电影和 xxx 的信息刮削。</li>\n<li>其余的部分也是用于刮削及资源整理的，具体可测试使用。</li>\n</ol>\n<h1 id=\"安可\"><a class=\"anchor\" href=\"#安可\">#</a> 安可</h1>\n<p>如果不想用网页端观看，而使用客户端，那么关于客户端应用可以在以下链接获取所需应用：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qZWxseWZpbi5vcmcvZG93bmxvYWRz\">https://jellyfin.org/downloads</span></p>\n<p>在这里，你也可以使用第三方的客户端 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2phcm5lZGVtZXVsZW1lZXN0ZXIvZmluZHJvaWQ=\">Findroid</span> ：</p>\n<p><img data-src=\"image-20250816114435404.png\" alt=\"image-20250816114435404\" /></p>\n<p><img data-src=\"image-20250816114441878.png\" alt=\"image-20250816114441878\" /></p>\n<p>目前使用下来，有个致命缺陷，混合类型和音乐类型的合集是无法显示的，只能电影或电视剧。</p>\n",
            "tags": [
                "docker",
                "nas"
            ]
        },
        {
            "id": "https://arachnid.cc/docker-deployment-of-navidrome/",
            "url": "https://arachnid.cc/docker-deployment-of-navidrome/",
            "title": "docker 部署之 navidrome 音乐播放",
            "date_published": "2025-03-19T11:11:35.000Z",
            "content_html": "<blockquote>\n<p>Version：<a href=\"https://github.com/navidrome/navidrome/tree/v0.55.2\"><strong>Navidrome</strong></a> 0.55.2</p>\n</blockquote>\n<p><img data-src=\"image-20250816115804062.png\" alt=\"image-20250816115804062\" /></p>\n<h1 id=\"介绍\"><a class=\"anchor\" href=\"#介绍\">#</a> 介绍</h1>\n<p>Navidrome 是一款开源的、轻量级的、自托管的音乐服务器，兼容 Subsonic API，可以通过网页或客户端应用访问和播放音乐。</p>\n<p>特点：</p>\n<ul>\n<li>处理超大音乐收藏</li>\n<li>几乎可串流任何音频格式</li>\n<li>读取并使用所有精心策划的元数据</li>\n<li>对合集（Various Artists 专辑）和盒装（多碟专辑）的强大支持</li>\n<li>多用户，每个用户都有自己的播放次数、播放列表、收藏夹等。</li>\n<li>资源使用率极低</li>\n<li>多平台，可在 macOS、Linux 和 Windows 上运行。还提供 Docker 映像</li>\n<li>所有主要平台（包括 Raspberry Pi）的二进制文件均可随时使用</li>\n<li>自动监控资料库变化，导入新文件并重新加载新元数据</li>\n<li>基于 Material UI 的可主题化、现代化和响应式网络界面</li>\n<li>与所有 Subsonic / Madsonic / Airsonic 客户端兼容</li>\n<li>即时转码可按用户 / 播放器设置。支持 Opus 编码</li>\n<li>翻译成各种语言</li>\n</ul>\n<p><img data-src=\"image-20250816143236595.png\" alt=\"image-20250816143236595\" /></p>\n<h1 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h1>\n<p>创建 navidrome 数据文件夹及音乐存放位置：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># $PATH 为你的相册存放路径</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /app/navidrome/data</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /<span class=\"token operator\">&lt;</span><span class=\"token environment constant\">$PATH</span><span class=\"token operator\">></span>/music</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /app/navidrome</pre></td></tr></table></figure><p>添加  <code>docker-compose.yml</code>  配置文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost:/app/navidrome] #\"></td><td><pre><span class=\"token function\">touch</span> docker-compose.yml</pre></td></tr></table></figure><p>写入：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"><span>docker-compose.yml</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">navidrome</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> deluan/navidrome<span class=\"token punctuation\">:</span>latest</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> navidrome</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> navidrome</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">:</span><span class=\"token number\">0</span> <span class=\"token comment\"># should be owner of volumes</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"4533:4533\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">-</span> network</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token comment\"># Optional: put your config options customization here. Examples:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token key atrule\">ND_SCANNER_ENABLED</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"false\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token key atrule\">ND_SCANNER_SCHEDULE</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"@weekly\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token key atrule\">ND_LOGLEVEL</span><span class=\"token punctuation\">:</span> info</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token key atrule\">ND_SESSIONTIMEOUT</span><span class=\"token punctuation\">:</span> 12h</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token key atrule\">ND_BASEURL</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token key atrule\">ND_DEFAULTLANGUAGE</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"zh-Hans\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token key atrule\">ND_LASTFM_ENABLED</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"false\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token key atrule\">ND_LISTENBRAINZ_ENABLED</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"false\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token key atrule\">ND_ENABLEDOWNLOADS</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"false\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token key atrule\">ND_ENABLEFAVOURITES</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"true\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token key atrule\">ND_ENABLESHARING</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"false\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token key atrule\">ND_ENABLESTARRATING</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"false\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token key atrule\">ND_ENABLETRANSCODINGCONFIG</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"true\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token key atrule\">ND_TRANSCODINGCACHESIZE</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"400MB\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token key atrule\">ND_IMAGECACHESIZE</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"100MB\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token key atrule\">ND_SCANNER_ARTISTJOINER</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&amp;\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"/app/navidrome/data:/data\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"/&lt;$PATH>/music:/music:ro\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token key atrule\">network</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token key atrule\">driver</span><span class=\"token punctuation\">:</span> bridge</pre></td></tr></table></figure><p>修改完成后，使用以下命令进行部署：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">docker-compose</span> up <span class=\"token parameter variable\">-d</span></pre></td></tr></table></figure><h2 id=\"主要参数说明\"><a class=\"anchor\" href=\"#主要参数说明\">#</a> 主要参数说明</h2>\n<p><strong>关于环境变量：</strong></p>\n<ul>\n<li><code>ND_SCANNER_ENABLED</code>  ：该字段用于是否启用计划扫描功能，默认是不开启，如果设为  <code>true</code>  ，那么将根据  <code>ND_SCANNER_SCHEDULE</code>  字段参数进行定时扫描。</li>\n<li><code>ND_SCANNER_SCHEDULE</code>  ：通过 Cron 语法定义自动扫描的时间，可以利用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcm9udGFiLmd1cnUv\">https://crontab.guru/</span> 生成你所需的计划时间。</li>\n<li><code>ND_LOGLEVEL</code>  ：如其名，用于记录调试信息的等级，支持  <code>error</code> ,  <code>warn</code> ,  <code>info</code> ,  <code>debug</code> ,  <code>trace</code>  。</li>\n<li><code>ND_SESSIONTIMEOUT</code>  ：用于设置 web UI 登录后无操作的退出时间。</li>\n<li><code>ND_BASEURL</code>  ：该字段用于配置 navidrome 的代理地址，不需要则为空。</li>\n<li><code>ND_DEFAULTLANGUAGE</code>  ：设置默认登录 web UI 时所显示的语言文本，支持语言可看 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25hdmlkcm9tZS9uYXZpZHJvbWUvdHJlZS9tYXN0ZXIvcmVzb3VyY2VzL2kxOG4=\">resources/i18n</span> ；对于中文语言有简体和繁体之分，所以要明确格式，eg：中文简体 -  <code>zh-Hans</code>  ，而中文繁体则为  <code>zh-Hant</code>  。</li>\n<li><code>ND_LASTFM_ENABLED</code>  ：是否需要集成 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGFzdC5mbS8=\">Last.fm</span>，一般用来获取艺人信息，默认打开，如果使用则需要配置  <code>ND_LASTFM_APIKEY</code>  、 <code>ND_LASTFM_SECRET</code>  。由于 <span class=\"exturl\" data-url=\"aHR0cDovL0xhc3QuZm0=\">Last.fm</span> 是在国外架设服务器，国内访问时常抽风，因此建议关闭。</li>\n<li><code>ND_LISTENBRAINZ_ENABLED</code>  ：是否需要集成 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9saXN0ZW5icmFpbnoub3JnLw==\">Listen Brainz</span>，用于补全专辑 / 歌曲信息、封面信息等标签信息，默认打开；可用  <code>ND_LISTENBRAINZ_BASEURL</code>  字段覆盖 Listen Brainz 默认地址，例如使用镜像 Listen Brainz 替代。由于 Listen Brainz 是在国外架设服务器，国内访问时常抽风，因此建议关闭。</li>\n<li><code>ND_ENABLEDOWNLOADS</code>  ：是否允许从 Web 界面下载音乐 / 专辑 / 播放列表，建议关闭，默认打开。</li>\n<li><code>ND_ENABLEFAVOURITES</code>  ：是否允许从 Web 界面星标或收藏 歌曲 / 专辑 / 艺术家。</li>\n<li><code>ND_ENABLESHARING</code>  ：是否允许创建分享链接。</li>\n<li><code>ND_ENABLESTARRATING</code>  ：是否在 Web 界面启用 5 星评分机制。</li>\n<li><code>ND_ENABLETRANSCODINGCONFIG</code>  ：是否允许在 Web 界面修改转码设置。</li>\n<li><code>ND_TRANSCODINGCACHESIZE</code>  ：用于设置转码缓存大小，设为 0 时禁用转码缓存，默认为 100MB。</li>\n<li><code>ND_IMAGECACHESIZE</code>  ：用于设置媒体图像缓存大小，设为 0 时禁用媒体图像缓存，默认为 100MB。</li>\n<li><code>ND_SCANNER_ARTISTJOINER</code>  ：当存在多个艺术家时，用于界分每个艺术家，而分割的字符则由该字段控制。</li>\n</ul>\n<p><strong>关于多个艺术家显示：</strong></p>\n<p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmF2aWRyb21lLm9yZy9kb2NzL3VzYWdlL2N1c3RvbXRhZ3MvI2NvbmZpZ3VyaW5nLWN1c3RvbS10YWdz\">Configuring custom tags</span> 中有提到：</p>\n<p><img data-src=\"image-20250816225344016.png\" alt=\"image-20250816225344016\" /></p>\n<p>因此，除了上面的  <code>ND_SCANNER_ARTISTJOINER</code>  字段能定义总的艺术家切割字符外，还可以自定义详细的不同分类的切割字符，因此，我们可以在  <code>navidrome.toml</code>  文件中编写需要的信息：</p>\n<pre><code>vim /app/navidrome/data/navidrome.toml\n</code></pre>\n<p>写入：</p>\n<figure class=\"highlight toml\"><figcaption data-lang=\"TOML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key property\">Tags.Artist.Split</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" / \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" feat. \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"feat.\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" feat \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" ft. \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" ft \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"; \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&amp;\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key property\">Tags.Roles.Split</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\";\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&amp;\"</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><ul>\n<li><code>Tags.Artist.Split</code>  ：表示存在多个艺术家 / 专辑艺术家时，所识别分割的匹配字符。</li>\n<li><code>Tags.Roles.Split</code>  ：表示除了  <code>Tags.Artist.Split</code>  定义的艺术家和专辑艺术家以外的，所有剩余的作词家、作曲家以及编曲家等存在多个时，其所匹配分割的字符。</li>\n</ul>\n<p>如果容器启动后找不到  <code>navidrome.toml</code>  文件识别，可以在  <code>ND_CONFIGFILE</code>  字段中指定位置（该字段默认为  <code>&quot;./navidrome.toml&quot;</code> ）。</p>\n<p>note：</p>\n<p>关于其它的变量属性可以参看官方说明：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmF2aWRyb21lLm9yZy9kb2NzL3VzYWdlL2NvbmZpZ3VyYXRpb24tb3B0aW9ucy8jZW52aXJvbm1lbnQtdmFyaWFibGVz\">https://www.navidrome.org/docs/usage/configuration-options/#environment-variables</span></p>\n<p>关于加载外部配置属性参数可看：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25hdmlkcm9tZS9uYXZpZHJvbWUvYmxvYi9tYXN0ZXIvcmVzb3VyY2VzL21hcHBpbmdzLnlhbWw=\">https://github.com/navidrome/navidrome/blob/master/resources/mappings.yaml</span></p>\n<h2 id=\"音乐库分类管理\"><a class=\"anchor\" href=\"#音乐库分类管理\">#</a> 音乐库分类管理</h2>\n<p>通常情况下音乐库的结构分类应该是：</p>\n<pre><code>.\n|-- Artist A\n|   |-- Albums A\n|   |   |-- Music A\n|   |   |-- Music B\n|   |   |-- ......\n|   |   `-- Music n\n|   |-- Albums B\n|   |   |-- Music A\n|   |   |-- Music B\n|   |   |-- ......\n|   |   `-- Music n\n|   |-- ......\n|   `-- Albums n\n|       |-- Music A\n|       |-- Music B\n|       |-- ......\n|       `-- Music n\n|-- Artist B\n|   |-- Albums A\n|   |   |-- Music A\n|   |   |-- Music B\n|   |   |-- ......\n|   |   `-- Music n\n|   |-- Albums B\n|   |   |-- Music A\n|   |   |-- Music B\n|   |   |-- ......\n|   |   `-- Music n\n|   |-- ......\n|   `-- Albums n\n|       |-- Music A\n|       |-- Music B\n|       |-- ......\n|       `-- Music n\n|-- ......\n`-- Artist n\n    |-- Albums A\n    |   |-- Music A\n    |   |-- Music B\n    |   |-- ......\n    |   `-- Music n\n    |-- Albums B\n    |   |-- Music A\n    |   |-- Music B\n    |   |-- ......\n    |   `-- Music n\n    |-- ......\n    `-- Albums n\n        |-- Music A\n        |-- Music B\n        |-- ......\n        `-- Music n\n</code></pre>\n<p>由于在部署 navidrome 的时候没有集成 lastfm, spotify, deezer 组件，因此，在查看艺术家的时候是没有相应的图片的，所以你可以在你的对应艺术家分类目录下放置艺术家图片即可显示，图片命名以  <code>ND_ARTISTARTPRIORITY</code>  字段的参数为匹配项，默认为  <code>&quot;artist.*, album/artist.*, external&quot;</code>  ；</p>\n<p>eg：</p>\n<p>在目录下放置  <code>artist.jpg</code>  艺术家封图：</p>\n<p><img data-src=\"image-20250817120342493.png\" alt=\"image-20250817120342493\" /></p>\n<p>在查看对应 artist 显示，可以看到已经识别导入了（需要完全扫描一次）：</p>\n<p><img data-src=\"image-20250817120526221.png\" alt=\"image-20250817120526221\" /></p>\n<p>而对于 artist 本地传记显示，目前版本还不支持，但已经有需求提出了，具体可看 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25hdmlkcm9tZS9uYXZpZHJvbWUvaXNzdWVzLzk2MQ==\">https://github.com/navidrome/navidrome/issues/961</span> ；当然，如果对自己网络访问国外服务器有信心的，可以启用  <code>ND_LASTFM_ENABLED</code>  or  <code>ND_SPOTIFY_ID</code>  项，即可实现 artist 封图和简介等相关信息：</p>\n<p><img data-src=\"image-20250817140334532.png\" alt=\"image-20250817140334532\" /></p>\n<h1 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h1>\n<p>浏览器访问  <code>http://localhost:4533</code>  ，首次进入需要设置账号密码：</p>\n<p><img data-src=\"image-20250817135949534.png\" alt=\"image-20250817135949534\" /></p>\n<h2 id=\"音乐标签信息\"><a class=\"anchor\" href=\"#音乐标签信息\">#</a> 音乐标签信息</h2>\n<p>对于歌曲的标签信息写入，只要符合常规的 &quot;ID3Tags&quot; 都能读取，像中文这种，推荐使用 &quot;ID3v2.3 UTF-16&quot; 格式。关于 navidrome 中定制的 tag，可以参看：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmF2aWRyb21lLm9yZy9kb2NzL3VzYWdlL3RhZ2dpbmctZ3VpZGVsaW5lcy8=\">https://www.navidrome.org/docs/usage/tagging-guidelines/</span></p>\n<h1 id=\"安可\"><a class=\"anchor\" href=\"#安可\">#</a> 安可</h1>\n<p>Navidrome 除了网页界面，还支持各种第三方客户端：</p>\n<ul>\n<li>iOS: <span class=\"exturl\" data-url=\"aHR0cDovL21pY2hhZWxzYXBwcy5kay9wbGF5c3ViYXBwLw==\">play:Sub</span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdWJzdHJlYW1lcmFwcC5jb20v\">substreamer</span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0JMZWVFWi9hbXBlcmZ5I3JlYWRtZQ==\">Amperfy</span> and <span class=\"exturl\" data-url=\"aHR0cHM6Ly9pc3ViLmFwcC8=\">iSub</span></li>\n<li>Android: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NhcHBpZWxsb0FudG9uaW8vdGVtcG8=\">Tempo</span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Nhd3llcmYvQ2FzdGFmaW9yZQ==\">Castafiore</span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYXBwcy9kZXRhaWxzP2lkPWdpdGh1Yi5kYW5lcmVuMjAwNS5kc3Vi\">DSub</span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2F1c3RpbnJpZWQvc3VidHJhY2tzI3JlYWRtZQ==\">Subtracks</span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdWJzdHJlYW1lcmFwcC5jb20v\">substreamer</span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3VsdHJhc29uaWMvdWx0cmFzb25pYyNyZWFkbWU=\">Ultrasonic</span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL252bGxzdm0vQXVkaW5hdXQjcmVhZG1l\">Audinaut</span> and <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdXNpYy5hcXpzY24uY24v\">音流</span></li>\n<li>Web: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BlZ3Vlcm9zZGMvc3VicGxheWVyI3JlYWRtZQ==\">Subplayer</span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RhbWxhbmQvYWlyc29uaWMtcmVmaXgjcmVhZG1l\">Airsonic Refix</span>, <span class=\"exturl\" data-url=\"aHR0cDovL3NocmltcHphLmdpdGh1Yi5pby9hdXJpYWwv\">Aurial</span>, <span class=\"exturl\" data-url=\"aHR0cDovL2phbXN0YXNoLmNvbS8=\">Jamstash</span> and <span class=\"exturl\" data-url=\"aHR0cDovL3Auc3ViZmlyZXBsYXllci5uZXQv\">Subfire</span></li>\n<li>Desktop: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdWJsaW1lbXVzaWMuYXBwLw==\">Sublime Music</span> (Linux) and <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2plZmZ2bGkvc29uaXhk\">Sonixd</span> (Windows/Linux/macOS)</li>\n<li>CLI: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RyeWZmZWwvamVsbHljbGkjcmVhZG1l\">Jellycli</span> (Windows/Linux) and <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dpbGRleWVkc2tpZXMvc3RtcCNyZWFkbWU=\">STMP</span> (Linux/macOS)</li>\n<li>Connected Speakers:\n<ul>\n<li>Sonos: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NpbW9qZW5raS9ib25vYiNyZWFkbWU=\">bonob</span></li>\n<li>Alexa: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NyaWNodGVyL2Fza3NvbmljI3JlYWRtZQ==\">AskSonic</span></li>\n</ul>\n</li>\n<li>Other:\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dhcndpY2toL3BsdWdpbi5hdWRpby5zdWJzb25pYyNyZWFkbWU=\">Subsonic Kodi Plugin</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0JvYkhhc05vU291bC9wbHVnaW4uYXVkaW8ubmF2aWRyb21lI3JlYWRtZQ==\">Navidrome Kodi Plugin</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZhbmdmdWZ1L2h0dHBkaXJmcyNyZWFkbWU=\">HTTPDirFS</span></li>\n</ul>\n</li>\n</ul>\n<p>在这里，安卓手机客户端可以尝试使用 Temop 或 Castafiore，当然还有其它的，具体哪个好用、谁才适合，则看自己的使用需求了。</p>\n<p>下面为 Tempo 的使用界面：</p>\n<p><img data-src=\"image-20250816160120279.png\" alt=\"image-20250816160120279\" /></p>\n<p><img data-src=\"image-20250816160132127.png\" alt=\"image-20250816160132127\" /></p>\n<p><img data-src=\"image-20250816160140991.png\" alt=\"image-20250816160140991\" /></p>\n<p>Castafiore 使用界面：</p>\n<p><img data-src=\"image-20250817151224772.png\" alt=\"image-20250817151224772\" /></p>\n<p><img data-src=\"image-20250817151230932.png\" alt=\"image-20250817151230932\" /></p>\n<p><img data-src=\"image-20250817151240959.png\" alt=\"image-20250817151240959\" /></p>\n",
            "tags": [
                "docker",
                "nas"
            ]
        },
        {
            "id": "https://arachnid.cc/omv6-install/",
            "url": "https://arachnid.cc/omv6-install/",
            "title": "debian 11 桌面安装 OMV 6",
            "date_published": "2024-01-13T13:04:04.775Z",
            "content_html": "<h1 id=\"debian-安装\"><a class=\"anchor\" href=\"#debian-安装\">#</a> Debian 安装</h1>\n<p>需要注意的几个点是：</p>\n<ol>\n<li>安装语言的时候选择英文安装，否者会造成部分乱码，至于后面想要使用中文，安装完成后再配置就好了。</li>\n<li>配置软件包不需要选择网络镜像，后期再配置镜像源。</li>\n<li>勾选 ssh 服务，以方便远程操作；至于是否选择图形界面，随个人喜好。</li>\n</ol>\n<h2 id=\"基本配置\"><a class=\"anchor\" href=\"#基本配置\">#</a> 基本配置</h2>\n<h3 id=\"添加-sudo-管理组\"><a class=\"anchor\" href=\"#添加-sudo-管理组\">#</a> 添加 sudo 管理组</h3>\n<p><code>your_name is not in the sudoers file. This incident will be reported.</code></p>\n<p>出现这种情况一般是你用普通用户键入  <code>sudo</code>  命令，但这个用户又没有加入  <code>sudo</code>  组上面，导致权限不够。</p>\n<p>解决（以下操作皆在 root 下执行）：</p>\n<p>通过追加到 sudo 组的形式，使用命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># 追加（append）用户到指定组（Group）</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">usermod</span> <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-G</span> <span class=\"token function\">sudo</span> your_name</pre></td></tr></table></figure><p>又或者，以修改  <code>/etc/sudoers</code>  文件的形式：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>visudo</pre></td></tr></table></figure><p>然后移动光标，在  <code># User privilege specification</code>  下面添加  <code>your_name ALL=(ALL:ALL) ALL</code>  ，根据提示  <code>写入 ^O</code>  ， <code>回车 Enter</code>  确认保存，  <code>退出 ^X</code>   ，得到：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">cat</span> /etc/sudoers</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre><span class=\"token punctuation\">\\</span>#</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre><span class=\"token punctuation\">\\</span># This <span class=\"token function\">file</span> MUST be edited with the <span class=\"token string\">'visudo'</span> <span class=\"token builtin class-name\">command</span> as root.</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre><span class=\"token punctuation\">\\</span>#</pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"\"></td><td><pre><span class=\"token punctuation\">\\</span># Please consider adding <span class=\"token builtin class-name\">local</span> content <span class=\"token keyword\">in</span> /etc/sudoers.d/ instead of</pre></td></tr><tr><td data-num=\"6\"></td><td data-command=\"\"></td><td><pre><span class=\"token punctuation\">\\</span># directly modifying this file.</pre></td></tr><tr><td data-num=\"7\"></td><td data-command=\"\"></td><td><pre><span class=\"token punctuation\">\\</span>#</pre></td></tr><tr><td data-num=\"8\"></td><td data-command=\"\"></td><td><pre><span class=\"token punctuation\">\\</span># See the <span class=\"token function\">man</span> page <span class=\"token keyword\">for</span> details on how to <span class=\"token function\">write</span> a sudoers file.</pre></td></tr><tr><td data-num=\"9\"></td><td data-command=\"\"></td><td><pre><span class=\"token punctuation\">\\</span>#</pre></td></tr><tr><td data-num=\"10\"></td><td data-command=\"\"></td><td><pre>Defaults\tenv_reset</pre></td></tr><tr><td data-num=\"11\"></td><td data-command=\"\"></td><td><pre>Defaults\tmail_badpass</pre></td></tr><tr><td data-num=\"12\"></td><td data-command=\"\"></td><td><pre>Defaults\t<span class=\"token assign-left variable\">secure_path</span><span class=\"token operator\">=</span><span class=\"token string\">\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td data-command=\"\"></td><td><pre><span class=\"token punctuation\">\\</span># Host <span class=\"token builtin class-name\">alias</span> specification</pre></td></tr><tr><td data-num=\"15\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td data-command=\"\"></td><td><pre><span class=\"token punctuation\">\\</span># User <span class=\"token builtin class-name\">alias</span> specification</pre></td></tr><tr><td data-num=\"17\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td data-command=\"\"></td><td><pre><span class=\"token punctuation\">\\</span># Cmnd <span class=\"token builtin class-name\">alias</span> specification</pre></td></tr><tr><td data-num=\"19\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td data-command=\"\"></td><td><pre><span class=\"token punctuation\">\\</span># User privilege specification</pre></td></tr><tr><td data-num=\"21\"></td><td data-command=\"\"></td><td><pre>root\t<span class=\"token assign-left variable\">ALL</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ALL:ALL<span class=\"token punctuation\">)</span> ALL</pre></td></tr><tr><td data-num=\"22\"></td><td data-command=\"\"></td><td><pre>your_name\t<span class=\"token assign-left variable\">ALL</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ALL:ALL<span class=\"token punctuation\">)</span> ALL</pre></td></tr><tr><td data-num=\"23\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td data-command=\"\"></td><td><pre><span class=\"token punctuation\">\\</span># Allow members of group <span class=\"token function\">sudo</span> to execute any <span class=\"token builtin class-name\">command</span></pre></td></tr><tr><td data-num=\"25\"></td><td data-command=\"\"></td><td><pre>%sudo\t <span class=\"token assign-left variable\">ALL</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ALL:ALL<span class=\"token punctuation\">)</span> ALL</pre></td></tr><tr><td data-num=\"26\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td data-command=\"\"></td><td><pre><span class=\"token punctuation\">\\</span># See sudoers<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token function\">more</span> information on <span class=\"token string\">\"@include\"</span> directives:</pre></td></tr><tr><td data-num=\"28\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td data-command=\"\"></td><td><pre>@includedir /etc/sudoers.d</pre></td></tr></table></figure><p>note：</p>\n<p><code>su</code>  带有  <code>-</code>  ，这和  <code>su</code>  是不同的，在用命令  <code>su</code>  的时候只是切换到 root，但没有把 root 的环境变量传过去，还是当前用户的环境变量，用  <code>su -</code>  命令会将环境变量也一起带过去，就像和  <code>root</code>  登录一样。关于  <code>su -</code>  的分析可参看：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZGJvb2wuY29tL2Rwa2ctcmVjb25maWd1cmUtYmFzaC1jb21tYW5kLW5vdC1mb3VuZC5odG1s\">dpkg-reconfigure 命令找不到问题解决</span></p>\n<h3 id=\"避免提示光盘安装软件包\"><a class=\"anchor\" href=\"#避免提示光盘安装软件包\">#</a> 避免提示光盘安装软件包</h3>\n<p><code>Media change: please insert the disc labeled 'Debian GNU/Linux xxx DVD' Media change: please insert the disc labeled.</code></p>\n<p>在 Debian 系统中，如果您碰巧使用 DVD 安装，当你调用  <code>apt</code>  时，会抛出一个错误消息，表示存储库 cdrom 没有发布文件，并要求插入 Debian 光盘来离线安装软件包，这时候我们需要绕过去掉提示，以便使用网络安装。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/apt/sources.list</pre></td></tr></table></figure><p>得到：</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"><span>sources.list</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre># deb cdrom:[Debian GNU/Linux 11.8.0 _Bullseye_ - Official amd64 DVD Binary-1 20231007-14:05]/ bullseye contrib main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>deb cdrom:[Debian GNU/Linux 11.8.0 _Bullseye_ - Official amd64 DVD Binary-1 20231007-14:05]/ bullseye contrib main</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre># Line commented out by installer because it failed to verify:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>#deb http://security.debian.org/debian-security bullseye-security main contrib</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># Line commented out by installer because it failed to verify:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>#deb-src http://security.debian.org/debian-security bullseye-security main contrib</pre></td></tr></table></figure><p>可以看到，默认是先通过  <code>deb cdrom:...</code>  安装软件的。所以在前面加一个  <code>#</code>  把这行注释掉即可；最后  <code>写入 ^O</code>  ， <code>回车 Enter</code>  确认保存，  <code>退出 ^X</code>  。</p>\n<h3 id=\"更换软件包镜像源\"><a class=\"anchor\" href=\"#更换软件包镜像源\">#</a> 更换软件包镜像源</h3>\n<p><code>E: Package 'xxx' has no installation candidate.</code></p>\n<p>这种情况一般是软件包获取不到，可能是网络问题，也可能是因为源的问题，换个好一点的镜像源就行了。</p>\n<p>例如：更换为 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2hlbHAvZGViaWFuLw==\">清华源地址</span></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> /etc/apt/sources.<span class=\"token punctuation\">&#123;</span>list,list.back<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/apt/sources.list</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr></table></figure><p>note：</p>\n<p>先找到镜像源文件并备份，然后使用  <code>nano</code>  编辑，把获取到的镜像源地址全部覆盖替换原有的文本，最后再执行  <code>apt update</code>  更新软件包，至此就可以安装原本装失败的软件了。如果用不习惯  <code>nano</code>  编辑器，可以安装  <code>vim</code>  。</p>\n<h3 id=\"内核编译工具\"><a class=\"anchor\" href=\"#内核编译工具\">#</a> 内核编译工具</h3>\n<p><code>make[n]: *** /lib/modules/kernel_version-amd64/build: No such file or directory.</code></p>\n<p>在编译部署内核模块的时候，如果报这个错误，是因为没有  <code>linux-headers</code>  导致。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> linux-headers-<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-r</span><span class=\"token variable\">)</span></span>-amd64</pre></td></tr></table></figure><p>note：</p>\n<p>命令  <code>uname -r</code>  就是用来获取当前内核版本的。</p>\n<p>一般编译驱动会用到  <code>sudo apt-get install build-essential linux-headers-$(uname -r)-amd64</code></p>\n<h3 id=\"网卡驱动添加\"><a class=\"anchor\" href=\"#网卡驱动添加\">#</a> 网卡驱动添加</h3>\n<p>获取网卡型号：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[user@localhost] $\"></td><td><pre>lspci <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-i</span> net</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre>02:00.0 Network controller: Realtek Semiconductor Co., Ltd. RTL8723BE PCIe Wireless Network Adapter</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre>03:00.0 Ethernet controller: Realtek Semiconductor Co., Ltd. RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller <span class=\"token punctuation\">(</span>rev <span class=\"token number\">15</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>其中  <code>Ethernet controller</code>  后面的表示以太网有线网卡，这里是 RTL8111/8168/8411；  <code>Network controller</code>  后面表示无线网卡，这里则是 RTL8723BE。</p>\n<ul>\n<li>\n<p>有线网卡</p>\n<p>一般主板上的有线网卡都是自带驱动的，但不排除驱动不管用或者另类没有，这个时候就需要自己找驱动，当然，如果有现成编译好打好包的驱动，那么只需要用 U 盘 copy 到系统然后进行安装即可，如果没有，那么就需要自己编译驱动了，这是一个很麻烦的事，特别是你完全没网的时候，光是安装一堆依赖都得一个个找。。。</p>\n<p>当然你也可以找个联网的虚拟机，安装一样的系统，编译好再 copy 过去；或者利用  <code>apt-cache depends package_name</code>  获取安装依赖，然后一个个安装；对于  <code>.deb</code>  文件，可以用  <code>dpkg --info path_deb_file</code>  查看。</p>\n</li>\n<li>\n<p>无线网卡</p>\n<p>在 Debian 最小安装中，是不存在无线网卡驱动的，只能自己安装：</p>\n<ul>\n<li>\n<p>intel 的无线网卡驱动：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> firmware-iwlwifi</pre></td></tr></table></figure><p>支持型号：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYWNrYWdlcy5kZWJpYW4ub3JnL2J1bGxzZXllL2Zpcm13YXJlLWl3bHdpZmk=\">https://packages.debian.org/bullseye/firmware-iwlwifi</span></p>\n</li>\n<li>\n<p>realtek（小螃蟹）的无线网卡驱动：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> firmware-realtek</pre></td></tr></table></figure><p>支持型号：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYWNrYWdlcy5kZWJpYW4ub3JnL2J1bGxzZXllL2Zpcm13YXJlLXJlYWx0ZWs=\">https://packages.debian.org/bullseye/firmware-realtek</span></p>\n</li>\n<li>\n<p>高通的无线网卡驱动：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> firmware-atheros</pre></td></tr></table></figure><p>支持型号：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYWNrYWdlcy5kZWJpYW4ub3JnL2J1bGxzZXllL2Zpcm13YXJlLWF0aGVyb3M=\">https://packages.debian.org/bullseye/firmware-atheros</span></p>\n</li>\n<li>\n<p>other：</p>\n<p>当然，如果你像一劳永逸，可以直接安装  <code>firmware-nonfree</code>  整个大包，或者在里面找相应的型号子包安装：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYWNrYWdlcy5kZWJpYW4ub3JnL3NvdXJjZS9idWxsc2V5ZS9maXJtd2FyZS1ub25mcmVlJUVGJUJDJTlCJUU4JTgwJThDJUU1JUFGJUI5JUU0JUJBJThFJUU1JTg1JUI2JUU1JUFFJTgzJUU2JUFGJTk0JUU4JUJFJTgzJUU2JTk2JUIwJUU3JTlBJTg0JUU4JUFFJUJFJUU1JUE0JTg3JUU2JTg4JTk2JUU4JTgwJTg1JUU0JUI4JThEJUU1JTlDJUE4JUU2JUI4JTg1JUU1JThEJTk1JUU0JUI4JThBJUU3JTlBJTg0JUU4JUFFJUJFJUU1JUE0JTg3JUVGJUJDJThDJUU1JThGJUFGJUU0JUJCJUE1JUU1JThFJUJCJUU1JUFFJTk4JUU3JUJEJTkxJUU2JTg4JTk2JUU4JTgwJTg1JUU1JUJDJTgwJUU2JUJBJTkwJUU1JUI5JUJGJUU1JTlDJUJBJUU0JUI4JThBJUU2JTg5JUJFJUVGJUJDJThDJUU0JUJEJTg2JUU1JUE0JUE3JUU5JTgzJUE4JUU1JTg4JTg2JUU5JTlDJTgwJUU4JUE2JTgxJUU4JTg3JUFBJUU1JUI3JUIxJUU3JUJDJTk2JUU4JUFGJTkxJUU5JUE5JUIxJUU1JThBJUE4JUUzJTgwJTgy\">https://packages.debian.org/source/bullseye/firmware-nonfree；而对于其它比较新的设备或者不在清单上的设备，可以去官网或者开源广场上找，但大部分需要自己编译驱动。</span></p>\n</li>\n</ul>\n</li>\n</ul>\n<p>关于网卡驱动安装完后，可以  <code>reboot</code>  重启，然后执行  <code>dmesg -l err</code>  查看日志，看驱动是否生效，如果没有，将会出现 error，然后排查解决就好了。</p>\n<h3 id=\"引导时间修改\"><a class=\"anchor\" href=\"#引导时间修改\">#</a> 引导时间修改</h3>\n<p>如果你是单系统，可以更改引导时间缩短跳转启动系统的时间。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">nano</span> /etc/default/grub</pre></td></tr></table></figure><p>更改  <code>GRUB_TIMEOUT</code>  数值为 1，这里建议不要改成 0，留出 1s 的时间，防止以后有用到。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">cat</span> /etc/default/grub</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># If you change this file, run 'update-grub' afterwards to update</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># /boot/grub/grub.cfg.</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># For full documentation of the options in this file, see:</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\">#   info -f grub -n 'Simple configuration'</span></pre></td></tr><tr><td data-num=\"6\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td data-command=\"\"></td><td><pre><span class=\"token assign-left variable\">GRUB_DEFAULT</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td data-command=\"\"></td><td><pre><span class=\"token assign-left variable\">GRUB_TIMEOUT</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td data-command=\"\"></td><td><pre><span class=\"token assign-left variable\">GRUB_DISTRIBUTOR</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span>lsb_release <span class=\"token parameter variable\">-i</span> <span class=\"token parameter variable\">-s</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span> /dev/null <span class=\"token operator\">||</span> <span class=\"token builtin class-name\">echo</span> Debian<span class=\"token variable\">`</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td data-command=\"\"></td><td><pre><span class=\"token assign-left variable\">GRUB_CMDLINE_LINUX_DEFAULT</span><span class=\"token operator\">=</span><span class=\"token string\">\"quiet\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td data-command=\"\"></td><td><pre><span class=\"token assign-left variable\">GRUB_CMDLINE_LINUX</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># Uncomment to enable BadRAM filtering, modify to suit your needs</span></pre></td></tr><tr><td data-num=\"14\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># This works with Linux (no patch required) and with any kernel that obtains</span></pre></td></tr><tr><td data-num=\"15\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)</span></pre></td></tr><tr><td data-num=\"16\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\">#GRUB_BADRAM=\"0x01234567,0xfefefefe,0x89abcdef,0xefefefef\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># Uncomment to disable graphical terminal (grub-pc only)</span></pre></td></tr><tr><td data-num=\"19\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\">#GRUB_TERMINAL=console</span></pre></td></tr><tr><td data-num=\"20\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># The resolution used on graphical terminal</span></pre></td></tr><tr><td data-num=\"22\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># note that you can use only modes which your graphic card supports via VBE</span></pre></td></tr><tr><td data-num=\"23\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># you can see them in real GRUB with the command `vbeinfo'</span></pre></td></tr><tr><td data-num=\"24\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\">#GRUB_GFXMODE=640x480</span></pre></td></tr><tr><td data-num=\"25\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># Uncomment if you don't want GRUB to pass \"root=UUID=xxx\" parameter to Linux</span></pre></td></tr><tr><td data-num=\"27\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\">#GRUB_DISABLE_LINUX_UUID=true</span></pre></td></tr><tr><td data-num=\"28\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># Uncomment to disable generation of recovery mode menu entries</span></pre></td></tr><tr><td data-num=\"30\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\">#GRUB_DISABLE_RECOVERY=\"true\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># Uncomment to get a beep at grub start</span></pre></td></tr><tr><td data-num=\"33\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\">#GRUB_INIT_TUNE=\"480 440 1\"</span></pre></td></tr></table></figure><p>最后更新 Grub：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">update-grub</span></pre></td></tr></table></figure><p>note：</p>\n<p>可以通过  <code>systemd-analyze time</code>  查看开机时间，通过  <code>systemd-analyze blame</code>  查看开机服务占用时间。</p>\n<h3 id=\"ssh-配置\"><a class=\"anchor\" href=\"#ssh-配置\">#</a> ssh 配置</h3>\n<p>在安装的时候有勾选 ssh 服务的话，那么只需要配置一下文件即可，否则就需要自己去下载。（当然，这里只是前置使用，后期安装 OMV 后，将由 OMV 接管）</p>\n<h3 id=\"安装中文输入法\"><a class=\"anchor\" href=\"#安装中文输入法\">#</a> 安装中文输入法</h3>\n<p>在 linux 系统中，常见的两大输入法框架：ibus 和 fcitx，而这里使用 Fcitx5，是用来接替 Fcitx 的。</p>\n<blockquote>\n<p>注意： fcitx5 包仅提供基本框架，且仅支持英文。如果要输入其他语言（例如中文或日文），则需要安装输入法引擎（IME）。</p>\n</blockquote>\n<p>Fcitx5 输入法引擎有以下几种：</p>\n<p><strong>中文</strong></p>\n<ul>\n<li>\n<p>fcitx5-chewing 包：是流行的繁体中文注音输入引擎，它基于 libchewing 包。</p>\n</li>\n<li>\n<p>fcitx5-chinese-addons 包：包含与中文相关的 addon，例如拼音、双拼和五笔。</p>\n</li>\n<li>\n<p>fcitx5-rime 包：使用 Rime 引擎。</p>\n</li>\n</ul>\n<p><strong>日文</strong></p>\n<ul>\n<li>\n<p>fcitx5-anthy 包：是流行的日文输入引擎。但是，它已不再受到积极开发。</p>\n</li>\n<li>\n<p>fcitx5-kkc 包：是日文假名输入引擎，它基于 libkkc 包。</p>\n</li>\n<li>\n<p>fcitx5-mozc 包：基于 Mozc（Google 日文输入法的开源版本）。</p>\n</li>\n<li>\n<p>fcitx5-skk 包：是日文假名输入引擎，它基于 libskk 包。</p>\n</li>\n</ul>\n<p><strong>其他语言</strong></p>\n<ul>\n<li>fcitx5-hangul 包：用于输入韩文，基于 libhangul 包。</li>\n<li>fcitx5-unikey 包：可用于输入越南语字符。</li>\n<li>fcitx5-m17n 包：可用于各种语言。</li>\n</ul>\n<p>1、卸载旧版及其余输入法</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">apt</span> purge fcitx* ibus*</pre></td></tr></table></figure><p>2、安装 Fcitx5 简体中文输入</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> fcitx5 fcitx5-chinese-addons</pre></td></tr></table></figure><p>3、重启配置</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">reboot</span></pre></td></tr></table></figure><p>开机后查看 fcitx5 是否随桌面环境自动启动，如无，则添加开机自启：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-d</span> <span class=\"token string\">\"~/.config/autostart/\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre> <span class=\"token function\">mkdir</span>  ~/.config/autostart/</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">cp</span> /usr/share/applications/org.fcitx.Fcitx5.desktop ~/.config/autostart/</pre></td></tr></table></figure><p>4、添加拼音输入</p>\n<p>在应用中打开 Fcitx5 配置，然后在输入法中添加中文拼音，同时在全局选项中配置输入法切换快捷键（默认是  <code>Ctrl + 空格键</code>  切换）。</p>\n<p>5、修改全局变量</p>\n<ul>\n<li>使用  <code>im-config</code>  组件配置</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> im-config</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>im-config</pre></td></tr></table></figure><p>进入图形界面选择 Fcitx5 输入法。</p>\n<ul>\n<li>编辑  <code>/etc/environment</code></li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">vim</span> /etc/environment</pre></td></tr></table></figure><p>添加如下全局配置：</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"><span>/etc/environment</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GTK_IM_MODULE=fcitx</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>QT_IM_MODULE=fcitx</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>XMODIFIERS=@im=fcitx</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>SDL_IM_MODULE=fcitx</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>INPUT_METHOD=fcitx</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>GLFW_IM_MODULE=ibus</pre></td></tr></table></figure><p>资料：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eGNuLm9yZy93aWtpL0ZjaXR4NQ==\">https://wiki.archlinuxcn.org/wiki/Fcitx5</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmRlYmlhbi5vcmcvemhfQ04vSTE4bi9GY2l0eDU=\">https://wiki.debian.org/zh_CN/I18n/Fcitx5</span></p>\n<h2 id=\"节电处理\"><a class=\"anchor\" href=\"#节电处理\">#</a> 节电处理</h2>\n<h3 id=\"无线\"><a class=\"anchor\" href=\"#无线\">#</a> 无线</h3>\n<p>软件关闭蓝牙功能：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>rfkill block bluetooth</pre></td></tr></table></figure><p>软件关闭 wifi 功能：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>rfkill block wifi</pre></td></tr></table></figure><h3 id=\"usb\"><a class=\"anchor\" href=\"#usb\">#</a> USB</h3>\n<p>添加 USB 空闲自动挂起处理，空闲等待时间为 2S， <code>reboot</code>  重启生效：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'ACTION==\"add\", SUBSYSTEM==\"usb\",  ATTR&#123;power/control&#125;=\"auto\", ATTR&#123;power/autosuspend_delay_ms&#125;=\"2000\"'</span> <span class=\"token operator\">></span> /etc/udev/rules.d/50-usb_power_save.rules</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">reboot</span></pre></td></tr></table></figure><p>其它控制：</p>\n<p><code>ATTR&#123;power/control&#125;=&quot;on&quot;</code>  or  <code>ATTR&#123;power/autosuspend_delay_ms&#125;=&quot;-1&quot;</code> ，表示禁用挂起； <code>ATTR&#123;power/wakeup&#125;=&quot;enable&quot;</code> ，表示使能 usb 唤醒，写入  <code>disable</code>  则关闭。</p>\n<p>如果想要单独设置，可以如下查看 usb 设备对应的 udev 字段，eg：查看 Logitech 鼠标：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>lsusb</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre>Bus 002 Device 001: ID 1d6b:0003 Linux Foundation <span class=\"token number\">3.0</span> root hub</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre>Bus 001 Device 003: ID 0bda:b728 Realtek Semiconductor Corp. RTL8723B Bluetooth</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre>Bus 001 Device 002: ID 046d:c52b Logitech, Inc. Unifying Receiver</pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"\"></td><td><pre>Bus 001 Device 001: ID 1d6b:0002 Linux Foundation <span class=\"token number\">2.0</span> root hub</pre></td></tr><tr><td data-num=\"6\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td data-command=\"\"></td><td><pre>lsusb <span class=\"token parameter variable\">-tvv</span></pre></td></tr><tr><td data-num=\"8\"></td><td data-command=\"\"></td><td><pre>/:  Bus 02.Port <span class=\"token number\">1</span>: Dev <span class=\"token number\">1</span>, <span class=\"token assign-left variable\">Class</span><span class=\"token operator\">=</span>root_hub, <span class=\"token assign-left variable\">Driver</span><span class=\"token operator\">=</span>xhci_hcd/7p, 5000M</pre></td></tr><tr><td data-num=\"9\"></td><td data-command=\"\"></td><td><pre>    ID 1d6b:0003 Linux Foundation <span class=\"token number\">3.0</span> root hub</pre></td></tr><tr><td data-num=\"10\"></td><td data-command=\"\"></td><td><pre>    /sys/bus/usb/devices/usb2  /dev/bus/usb/002/001</pre></td></tr><tr><td data-num=\"11\"></td><td data-command=\"\"></td><td><pre>/:  Bus 01.Port <span class=\"token number\">1</span>: Dev <span class=\"token number\">1</span>, <span class=\"token assign-left variable\">Class</span><span class=\"token operator\">=</span>root_hub, <span class=\"token assign-left variable\">Driver</span><span class=\"token operator\">=</span>xhci_hcd/9p, 480M</pre></td></tr><tr><td data-num=\"12\"></td><td data-command=\"\"></td><td><pre>    ID 1d6b:0002 Linux Foundation <span class=\"token number\">2.0</span> root hub</pre></td></tr><tr><td data-num=\"13\"></td><td data-command=\"\"></td><td><pre>    /sys/bus/usb/devices/usb1  /dev/bus/usb/001/001</pre></td></tr><tr><td data-num=\"14\"></td><td data-command=\"\"></td><td><pre>    <span class=\"token operator\">|</span>__ Port <span class=\"token number\">4</span>: Dev <span class=\"token number\">2</span>, If <span class=\"token number\">1</span>, <span class=\"token assign-left variable\">Class</span><span class=\"token operator\">=</span>Human Interface Device, <span class=\"token assign-left variable\">Driver</span><span class=\"token operator\">=</span>usbhid, 12M</pre></td></tr><tr><td data-num=\"15\"></td><td data-command=\"\"></td><td><pre>        ID 046d:c52b Logitech, Inc. Unifying Receiver</pre></td></tr><tr><td data-num=\"16\"></td><td data-command=\"\"></td><td><pre>        /sys/bus/usb/devices/1-4  /dev/bus/usb/001/002</pre></td></tr><tr><td data-num=\"17\"></td><td data-command=\"\"></td><td><pre>    <span class=\"token operator\">|</span>__ Port <span class=\"token number\">4</span>: Dev <span class=\"token number\">2</span>, If <span class=\"token number\">2</span>, <span class=\"token assign-left variable\">Class</span><span class=\"token operator\">=</span>Human Interface Device, <span class=\"token assign-left variable\">Driver</span><span class=\"token operator\">=</span>usbhid, 12M</pre></td></tr><tr><td data-num=\"18\"></td><td data-command=\"\"></td><td><pre>        ID 046d:c52b Logitech, Inc. Unifying Receiver</pre></td></tr><tr><td data-num=\"19\"></td><td data-command=\"\"></td><td><pre>        /sys/bus/usb/devices/1-4  /dev/bus/usb/001/002</pre></td></tr><tr><td data-num=\"20\"></td><td data-command=\"\"></td><td><pre>    <span class=\"token operator\">|</span>__ Port <span class=\"token number\">4</span>: Dev <span class=\"token number\">2</span>, If <span class=\"token number\">0</span>, <span class=\"token assign-left variable\">Class</span><span class=\"token operator\">=</span>Human Interface Device, <span class=\"token assign-left variable\">Driver</span><span class=\"token operator\">=</span>usbhid, 12M</pre></td></tr><tr><td data-num=\"21\"></td><td data-command=\"\"></td><td><pre>        ID 046d:c52b Logitech, Inc. Unifying Receiver</pre></td></tr><tr><td data-num=\"22\"></td><td data-command=\"\"></td><td><pre>        /sys/bus/usb/devices/1-4  /dev/bus/usb/001/002</pre></td></tr><tr><td data-num=\"23\"></td><td data-command=\"\"></td><td><pre>    <span class=\"token operator\">|</span>__ Port <span class=\"token number\">8</span>: Dev <span class=\"token number\">3</span>, If <span class=\"token number\">0</span>, <span class=\"token assign-left variable\">Class</span><span class=\"token operator\">=</span>Wireless, <span class=\"token assign-left variable\">Driver</span><span class=\"token operator\">=</span>btusb, 12M</pre></td></tr><tr><td data-num=\"24\"></td><td data-command=\"\"></td><td><pre>        ID 0bda:b728 Realtek Semiconductor Corp. RTL8723B Bluetooth</pre></td></tr><tr><td data-num=\"25\"></td><td data-command=\"\"></td><td><pre>        /sys/bus/usb/devices/1-8  /dev/bus/usb/001/003</pre></td></tr><tr><td data-num=\"26\"></td><td data-command=\"\"></td><td><pre>    <span class=\"token operator\">|</span>__ Port <span class=\"token number\">8</span>: Dev <span class=\"token number\">3</span>, If <span class=\"token number\">1</span>, <span class=\"token assign-left variable\">Class</span><span class=\"token operator\">=</span>Wireless, <span class=\"token assign-left variable\">Driver</span><span class=\"token operator\">=</span>btusb, 12M</pre></td></tr><tr><td data-num=\"27\"></td><td data-command=\"\"></td><td><pre>        ID 0bda:b728 Realtek Semiconductor Corp. RTL8723B Bluetooth</pre></td></tr><tr><td data-num=\"28\"></td><td data-command=\"\"></td><td><pre>        /sys/bus/usb/devices/1-8  /dev/bus/usb/001/003</pre></td></tr><tr><td data-num=\"29\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td data-command=\"\"></td><td><pre>udevadm info <span class=\"token parameter variable\">-a</span> /dev/bus/usb/001/002</pre></td></tr><tr><td data-num=\"31\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td data-command=\"\"></td><td><pre>Udevadm info starts with the device specified by the devpath and <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"33\"></td><td data-command=\"\"></td><td><pre>walks up the chain of parent devices. It prints <span class=\"token keyword\">for</span> every device</pre></td></tr><tr><td data-num=\"34\"></td><td data-command=\"\"></td><td><pre>found, all possible attributes <span class=\"token keyword\">in</span> the udev rules key format.</pre></td></tr><tr><td data-num=\"35\"></td><td data-command=\"\"></td><td><pre>A rule to match, can be composed by the attributes of the device</pre></td></tr><tr><td data-num=\"36\"></td><td data-command=\"\"></td><td><pre>and the attributes from one single parent device.</pre></td></tr><tr><td data-num=\"37\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td data-command=\"\"></td><td><pre>  looking at device <span class=\"token string\">'/devices/pci0000:00/0000:00:15.0/usb1/1-4'</span><span class=\"token builtin class-name\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td data-command=\"\"></td><td><pre>    <span class=\"token assign-left variable\">KERNEL</span><span class=\"token operator\">==</span><span class=\"token string\">\"1-4\"</span></pre></td></tr><tr><td data-num=\"40\"></td><td data-command=\"\"></td><td><pre>    <span class=\"token assign-left variable\">SUBSYSTEM</span><span class=\"token operator\">==</span><span class=\"token string\">\"usb\"</span></pre></td></tr><tr><td data-num=\"41\"></td><td data-command=\"\"></td><td><pre>    <span class=\"token assign-left variable\">DRIVER</span><span class=\"token operator\">==</span><span class=\"token string\">\"usb\"</span></pre></td></tr><tr><td data-num=\"42\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>authorized<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>avoid_reset_quirk<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"44\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bConfigurationValue<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"45\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bDeviceClass<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"00\"</span></pre></td></tr><tr><td data-num=\"46\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bDeviceProtocol<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"00\"</span></pre></td></tr><tr><td data-num=\"47\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bDeviceSubClass<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"00\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bMaxPacketSize0<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"8\"</span></pre></td></tr><tr><td data-num=\"49\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bMaxPower<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"98mA\"</span></pre></td></tr><tr><td data-num=\"50\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bNumConfigurations<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"51\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bNumInterfaces<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\" 3\"</span></pre></td></tr><tr><td data-num=\"52\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bcdDevice<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1211\"</span></pre></td></tr><tr><td data-num=\"53\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>bmAttributes<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"a0\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>busnum<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"55\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>configuration<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"RQR12.11_B0032\"</span></pre></td></tr><tr><td data-num=\"56\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>devnum<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"2\"</span></pre></td></tr><tr><td data-num=\"57\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>devpath<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"4\"</span></pre></td></tr><tr><td data-num=\"58\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>idProduct<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"c52b\"</span></pre></td></tr><tr><td data-num=\"59\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>idVendor<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"046d\"</span></pre></td></tr><tr><td data-num=\"60\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>ltm_capable<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"no\"</span></pre></td></tr><tr><td data-num=\"61\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>manufacturer<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"Logitech\"</span></pre></td></tr><tr><td data-num=\"62\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>maxchild<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"63\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/active_duration<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"5486884\"</span></pre></td></tr><tr><td data-num=\"64\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/async<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"enabled\"</span></pre></td></tr><tr><td data-num=\"65\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/autosuspend<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"2\"</span></pre></td></tr><tr><td data-num=\"66\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/autosuspend_delay_ms<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"2000\"</span></pre></td></tr><tr><td data-num=\"67\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/connected_duration<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"5486884\"</span></pre></td></tr><tr><td data-num=\"68\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/control<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"on\"</span></pre></td></tr><tr><td data-num=\"69\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/level<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"on\"</span></pre></td></tr><tr><td data-num=\"70\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/persist<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"71\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/runtime_active_kids<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"72\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/runtime_active_time<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"5486602\"</span></pre></td></tr><tr><td data-num=\"73\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/runtime_enabled<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"forbidden\"</span></pre></td></tr><tr><td data-num=\"74\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/runtime_status<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"active\"</span></pre></td></tr><tr><td data-num=\"75\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/runtime_suspended_time<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"76\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/runtime_usage<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"77\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"enabled\"</span></pre></td></tr><tr><td data-num=\"78\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup_abort_count<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"79\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup_active<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"80\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup_active_count<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"81\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup_count<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"82\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup_expire_count<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"83\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup_last_time_ms<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"84\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup_max_time_ms<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"85\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>power/wakeup_total_time_ms<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"86\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>product<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"USB Receiver\"</span></pre></td></tr><tr><td data-num=\"87\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>quirks<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"0x0\"</span></pre></td></tr><tr><td data-num=\"88\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>removable<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"removable\"</span></pre></td></tr><tr><td data-num=\"89\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>rx_lanes<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"90\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>speed<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"12\"</span></pre></td></tr><tr><td data-num=\"91\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>tx_lanes<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"92\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>urbnum<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\"34\"</span></pre></td></tr><tr><td data-num=\"93\"></td><td data-command=\"\"></td><td><pre>    ATTR<span class=\"token punctuation\">&#123;</span>version<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">==</span><span class=\"token string\">\" 2.00\"</span></pre></td></tr><tr><td data-num=\"94\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td data-command=\"\"></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr></table></figure><p><strong>参看：</strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmtlcm5lbC5vcmcvZHJpdmVyLWFwaS91c2IvcG93ZXItbWFuYWdlbWVudC5odG1s\">https://docs.kernel.org/driver-api/usb/power-management.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvVWRldiNXYWtpbmdfZnJvbV9zdXNwZW5kX3dpdGhfVVNCX2RldmljZQ==\">https://wiki.archlinux.org/title/Udev#Waking_from_suspend_with_USB_device</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5yZWFjdGl2YXRlZC5uZXQvd3JpdGluZ191ZGV2X3J1bGVzLmh0bWwjZXhhbXBsZS1wcmludGVy\">http://www.reactivated.net/writing_udev_rules.html#example-printer</span></p>\n<h3 id=\"cpu-调度\"><a class=\"anchor\" href=\"#cpu-调度\">#</a> cpu 调度</h3>\n<p>一般支持以下几种策略，旧内核可能不支持  <code>schedutil</code>  ：</p>\n<table>\n<thead>\n<tr>\n<th>Governor</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>performance</td>\n<td>Run the CPU at the maximum frequency, obtained from  <code>/sys/devices/system/cpu/cpuX/cpufreq/scaling_max_freq</code> .</td>\n</tr>\n<tr>\n<td>powersave</td>\n<td>Run the CPU at the minimum frequency, obtained from  <code>/sys/devices/system/cpu/cpuX/cpufreq/scaling_min_freq</code> .</td>\n</tr>\n<tr>\n<td>userspace</td>\n<td>Run the CPU at user specified frequencies, configurable via  <code>/sys/devices/system/cpu/cpuX/cpufreq/scaling_setspeed</code> .</td>\n</tr>\n<tr>\n<td>ondemand</td>\n<td>Scales the frequency dynamically according to current load. Jumps to the highest frequency and then possibly back off as the idle time increases.</td>\n</tr>\n<tr>\n<td>conservative</td>\n<td>Scales the frequency dynamically according to current load. Scales the frequency more gradually than ondemand.</td>\n</tr>\n<tr>\n<td>schedutil</td>\n<td>Scheduler-driven CPU frequency selection.</td>\n</tr>\n</tbody>\n</table>\n<p>关于  <code>schedutil</code>  的原理可看：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZWVwaW5vdXQuY29tL2FuZHJvaWQtc3lzdGVtLWFuYWx5c2lzL2FuZHJvaWQtY3B1LXJlbGF0ZWQvcHJpbmNpcGxlLWFuYWx5c2lzLW9mLWNwdS1nb3Zlcm5vci1zY2hlZHV0aWwuaHRtbA==\">https://deepinout.com/android-system-analysis/android-cpu-related/principle-analysis-of-cpu-governor-schedutil.html</span></p>\n<p>查看 cpu 支持的调度策略及当前使用的模式：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">cat</span> /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre>conservative ondemand performance schedutil</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">cat</span> /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre>schedutil</pre></td></tr></table></figure><p>修改所有 cpu 的策略：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token builtin class-name\">echo</span> governor <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre>governor</pre></td></tr></table></figure><p>note： <code>governor</code>  为支持的策略之一，选你需要更改的就好了。</p>\n<p><strong>注意，该操作只在当前生效，任何复位或重启后，都将恢复默认操作，因此如果要让每次生效，那么需要编写开机脚本或写入内核。</strong></p>\n<p>查看各 cpu 频率：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">cat</span> /proc/cpuinfo <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-E</span> <span class=\"token string\">'^model name|^cpu MHz'</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre>model name      <span class=\"token builtin class-name\">:</span> Intel<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Pentium<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Silver J5040 CPU @ <span class=\"token number\">2</span>.00GHz</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre>cpu MHz         <span class=\"token builtin class-name\">:</span> <span class=\"token number\">1029.564</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre>model name      <span class=\"token builtin class-name\">:</span> Intel<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Pentium<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Silver J5040 CPU @ <span class=\"token number\">2</span>.00GHz</pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"\"></td><td><pre>cpu MHz         <span class=\"token builtin class-name\">:</span> <span class=\"token number\">1168.290</span></pre></td></tr><tr><td data-num=\"6\"></td><td data-command=\"\"></td><td><pre>model name      <span class=\"token builtin class-name\">:</span> Intel<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Pentium<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Silver J5040 CPU @ <span class=\"token number\">2</span>.00GHz</pre></td></tr><tr><td data-num=\"7\"></td><td data-command=\"\"></td><td><pre>cpu MHz         <span class=\"token builtin class-name\">:</span> <span class=\"token number\">818.342</span></pre></td></tr><tr><td data-num=\"8\"></td><td data-command=\"\"></td><td><pre>model name      <span class=\"token builtin class-name\">:</span> Intel<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Pentium<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Silver J5040 CPU @ <span class=\"token number\">2</span>.00GHz</pre></td></tr><tr><td data-num=\"9\"></td><td data-command=\"\"></td><td><pre>cpu MHz         <span class=\"token builtin class-name\">:</span> <span class=\"token number\">960.974</span></pre></td></tr></table></figure><p>资料：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvQ1BVX2ZyZXF1ZW5jeV9zY2FsaW5nI1NjYWxpbmdfZ292ZXJub3Jz\">https://wiki.archlinux.org/title/CPU_frequency_scaling#Scaling_governors</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmtlbHUub3JnL3RlY2gvMjAyMS8wNS8xMy9iaW9zLWNvbmZpZy1yZW1hcmsuaHRtbA==\">https://blog.kelu.org/tech/2021/05/13/bios-config-remark.html</span></p>\n<h3 id=\"睡眠与休眠\"><a class=\"anchor\" href=\"#睡眠与休眠\">#</a> 睡眠与休眠</h3>\n<p>关于 Suspend，Linux 内核提供了四种电源模式，如下表：</p>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>freeze</td>\n<td>冻结 I/O 设备，将它们置于低功耗状态，使处理器进入空闲状态，唤醒最快，耗电比其它 standby, mem, disk 方式高。</td>\n</tr>\n<tr>\n<td>standby</td>\n<td>除了冻结 I/O 设备外，还会暂停系统，唤醒较快，耗电比其它 mem, disk 方式高。</td>\n</tr>\n<tr>\n<td>mem</td>\n<td>将运行状态数据存到内存，并关闭外设，进入等待模式，唤醒较慢，耗电比 disk 方式高。（实际由  <code>/sys/power/mem_sleep</code>  抉择）</td>\n</tr>\n<tr>\n<td>disk</td>\n<td>将运行状态数据存到硬盘，然后关机，唤醒最慢；对于嵌入式系统，由于没有硬盘，所以一般不支持。（实际由  <code>/sys/power/disk</code>  抉择）</td>\n</tr>\n</tbody>\n</table>\n<p>然，虽然 linux 内核支持，但实际上不同的平台，对应的支持也是不一样的；可以使用以下命令查看对 Suspend 支持：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">cat</span> /sys/power/state</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre>freeze mem disk</pre></td></tr></table></figure><p>在这里，就只支持 3 种： <code>freeze</code>  、  <code>mem</code>  、  <code>disk</code>  。</p>\n<p>在 linux 中，有两个比较特殊的 Suspend 管理，那就是  <code>mem</code>  和  <code>disk</code>  ，分别是 <strong>Suspend to RAM（挂起到内存，通称睡眠）</strong> 和 <strong>Suspend to disk（挂起到硬盘，通称休眠）</strong> 这两种电源管理模式，它们默认使用的 ACPI 定义如下：</p>\n<ul>\n<li>\n<p>Suspend to RAM（挂起到内存，通称睡眠）</p>\n<p>ACPI 定义的 <strong>S3</strong> 睡眠状态。通过将机器中大多数和 RAM 不相关的部件断电来工作，RAM 是恢复机器状态所必需的。由于可以节省大量电力，建议笔记本电脑在使用电池运行且盖子关闭时（或用户在一段时间内处于非活动状态）自动进入此模式。</p>\n</li>\n<li>\n<p>Suspend to disk（挂起到硬盘，通称休眠）</p>\n<p>ACPI 定义的 <strong>S4</strong> 睡眠状态。将机器状态保存到交换空间并关闭机器。再次开机后，恢复状态。直到开机前，机器都不会有任何待机功耗。</p>\n</li>\n</ul>\n<p>note：实际上，  <code>mem</code>  和  <code>disk</code>  是由它们对应的配置文件决定的，但一般默认会使用上面的 ACPI 状态。</p>\n<p>对于  <code>mem</code>  和  <code>disk</code>  的控制：</p>\n<p><code>mem</code>  模式的操作由  <code>/sys/power/mem_sleep</code>  抉择，常见以下几种睡眠处理：</p>\n<ul>\n<li>deep：Suspend-To-RAM，对应 ACPI 为 S3；</li>\n<li>shallow：Power-On Suspend，对应 ACPI 为 S1；</li>\n<li>s2idle：Suspend-To-Idle，对应 ACPI 为 S0；</li>\n</ul>\n<p><code>disk</code>  模式的操作则由  <code>/sys/power/disk</code>  抉择，常见以下几种休眠处理：</p>\n<ul>\n<li>platform：使用平台（BIOS 支持）提供的方法将把系统置于超低功耗状态（如 ACPI S4），使得额外的唤醒选项可用，并且让平台固件在唤醒之后可能允许做一个简简的初始化；</li>\n<li>shutdown：顾名思义就是关闭系统设备断电；</li>\n<li>reboot：这个。。。不用说了吧；</li>\n<li>suspend：系统混合挂起，是的没错，可以将睡眠和休眠混合，可以通过在   <code>/etc/systemd/sleep.conf</code>  文件进行配置以达到效果，可参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eGNuLm9yZy93aWtpLyVFNyU5NCVCNSVFNiVCQSU5MCVFNyVBRSVBMSVFNyU5MCU4NiMlRTYlOEMlODIlRTglQjUlQjclRTYlODglOTYlRTQlQkMlOTElRTclOUMlQTAlRTglQUYlQjclRTYlQjElODIlRTYlOTclQjYlRTclOUElODQlRTYlQjclQjclRTUlOTAlODglRTclOUQlQTElRTclOUMlQTA=\">挂起或休眠请求时的混合睡眠</span> ；</li>\n<li>test_resume：诊断操作。先是加载镜像（就好像系统刚从休眠中醒来，当前运行的内核实例是还原内核），然后再恢复整个系统。</li>\n</ul>\n<p>查看支持：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">cat</span> /sys/power/mem_sleep</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre>s2idle <span class=\"token punctuation\">[</span>deep<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">cat</span> /sys/power/disk</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre><span class=\"token punctuation\">[</span>platform<span class=\"token punctuation\">]</span> <span class=\"token function\">shutdown</span> <span class=\"token function\">reboot</span> <span class=\"token function\">suspend</span> test_resume</pre></td></tr></table></figure><p>如果想要切换相应的控制，只需往写入你要的处理模式就好了；当然，这只是在下一次中生效，当执行完一次后将会恢复；若要设成永久处理，那么可以通过修改内核属性来达到效果。</p>\n<p><strong>自动休眠：</strong></p>\n<p>一般作为服务器，是不需要自动休眠的，但对于一周也用不了多少次的，可能使用自动休眠会省电一点，配合唤醒功能即可达到快速恢复工作环境的效果。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">vim</span> /etc/default/grub</pre></td></tr></table></figure><p>然后添加  <code>GRUB_CMDLINE_LINUX=&quot;mem_sleep_default=deep&quot;</code>  ，然后重新生成  <code>grub.cfg</code>  文件，重启生效：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">grub-mkconfig</span> <span class=\"token parameter variable\">-o</span> /boot/grub/grub.cfg</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">reboot</span></pre></td></tr></table></figure><p>资料：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvUG93ZXJfbWFuYWdlbWVudC9TdXNwZW5kX2FuZF9oaWJlcm5hdGU=\">https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYW4uYXJjaGxpbnV4Lm9yZy9tYW4vc2xlZXAuY29uZi5kLjU=\">https://man.archlinux.org/man/sleep.conf.d.5</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvUG93ZXJfbWFuYWdlbWVudCNTdXNwZW5kX2FuZF9oaWJlcm5hdGU=\">https://wiki.archlinux.org/title/Power_management#Suspend_and_hibernate</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudW5peHR1dG9yaWFsLm9yZy9kaXNhYmxlLXNsZWVwLW9uLXVidW50dS1zZXJ2ZXIv\">https://www.unixtutorial.org/disable-sleep-on-ubuntu-server/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2VybmVsLm9yZy9kb2MvaHRtbC9sYXRlc3QvYWRtaW4tZ3VpZGUvcG0vc2xlZXAtc3RhdGVzLmh0bWw=\">https://www.kernel.org/doc/html/latest/admin-guide/pm/sleep-states.html</span></p>\n<p>更多电源管理：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvUG93ZXJfbWFuYWdlbWVudCNQb3dlcl9zYXZpbmc=\">https://wiki.archlinux.org/title/Power_management#Power_saving</span></p>\n<p>Kernel 参数：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2VybmVsLm9yZy9kb2MvRG9jdW1lbnRhdGlvbi9hZG1pbi1ndWlkZS9rZXJuZWwtcGFyYW1ldGVycy50eHQ=\">https://www.kernel.org/doc/Documentation/admin-guide/kernel-parameters.txt</span></p>\n<h2 id=\"图形环境切换\"><a class=\"anchor\" href=\"#图形环境切换\">#</a> 图形环境切换</h2>\n<p>前提：系统已经安装了桌面环境，需要禁止桌面环境，以纯命令行启动，以节约性能。</p>\n<p>获取当前系统运行的界面模式：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>systemctl get-default</pre></td></tr></table></figure><p>纯命令行启动：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>systemctl set-default multi-user.target</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">reboot</span></pre></td></tr></table></figure><p>note：如果想从命令行中启动桌面，可以通过相应的图形界面启动命令来启动，例如启动 xfce4 的桌面： <code>startxfce4</code>  .</p>\n<p>桌面环境启动：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>systemctl set-default graphical.target</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">reboot</span></pre></td></tr></table></figure><p>对于多桌面，可以使用下面命令，然后选择对应的桌面系统，输入序号确认：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>update-alternatives <span class=\"token parameter variable\">--config</span> x-session-manager</pre></td></tr></table></figure><p>如果要删除  <code>x-session-manager</code>  的某个选项，可以先通过以下方式列出其路径，然后通过删除选项（eg：gnome-session）：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>update-alternatives <span class=\"token parameter variable\">--list</span> x-session-manager</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>update-alternatives <span class=\"token parameter variable\">--remove</span> x-session-manager /usr/bin/gnome-session</pre></td></tr></table></figure><p>参考：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly91bml4LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8zNjcyOTQvaG93LWRvLWktY2hhbmdlLW15LWRlZmF1bHQtc2Vzc2lvbg==\">https://unix.stackexchange.com/questions/367294/how-do-i-change-my-default-session</span></p>\n<h2 id=\"远程唤醒\"><a class=\"anchor\" href=\"#远程唤醒\">#</a> 远程唤醒</h2>\n<p>首先，查看系统主板 BIOS 是否支持 Wake-On-LAN ，要是支持的话，必须先启动它，因为它被默认设禁用。</p>\n<p>然后，需要一个支持 Wake-On-LAN 的网卡；<mark>无线网卡并不支持</mark>。你需要运行  <code>ethtool</code>  命令查看网卡是否支持 Wake-On-LAN ：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">ethtool</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">ethtool</span> eno1 <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> Wake-on</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre>        Supports Wake-on: pumbg</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre>        Wake-on: d</pre></td></tr></table></figure><p>这条命令输出的  <code>Supports Wake-on</code>  字段会告诉你你的网卡支持哪些功能，同时  <code>Wake-on</code>  指示着当前配置的模式，一般有以下几种选项：</p>\n<ul>\n<li>d -- 禁用（disable）</li>\n<li>p -- 物理活动唤醒（Wake on PHY activity）</li>\n<li>u -- 单播消息唤醒（Wake on unicast activity）</li>\n<li>m -- 多播（组播）消息唤醒（Wake on multicast activity）</li>\n<li>b -- 广播消息唤醒（Wake on broadcast activity）</li>\n<li>a -- ARP 唤醒（Wake on ARP activity）</li>\n<li>g -- 特定数据包唤醒（magic packet activity）</li>\n</ul>\n<p>修改 wol 功能：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">ethtool</span> <span class=\"token parameter variable\">-s</span> eno1 wol g</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">ethtool</span> eno1 <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> Wake-on</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre>        Supports Wake-on: pumbg</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre>        Wake-on: g</pre></td></tr></table></figure><p>此刻已经开启 magic packet 唤醒了，然后执行  <code>ip a</code>  查看网卡的 mac 地址和 ip 并记录，再写入  <code>echo mem &gt; /sys/power/state</code>  ，让系统进入休眠，再在另一台主机测试网络唤醒。</p>\n<ul>\n<li>\n<p>Windows</p>\n<p>可以选择该工具使用：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZGVwaWN1cy5jb20vd2FrZS1vbi1sYW4vd2FrZS1vbi1sYW4tY21k\">Wake On Lan Command Line</span> 。</p>\n</li>\n<li>\n<p>Linux</p>\n<p>可以安装对应的 pack 包（eg：etherwake），这里就不多说了。</p>\n</li>\n</ul>\n<p>当你能成功唤醒后，就证明你的主板支持，bios 上的 wol 有启用，系统配置上也打开了。</p>\n<p>最后，对于部分系统，可能有些在设置完显示  <code>Wake-on: g</code>  后，重启会变回默认配置，这时可以编写一个开机启动服务：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">vim</span> /etc/systemd/system/wol@.service</pre></td></tr></table></figure><p>添加如下内容：</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"><span>wol@.service</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>[Unit]</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Description=Wake-on-LAN for %i</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Requires=network.target</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>After=network.target</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>[Service]</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ExecStart=/usr/bin/ethtool -s %i wol g</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Type=oneshot</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>[Install]</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>WantedBy=multi-user.target</pre></td></tr></table></figure><p>然后 [Install] 区块中的  <code>WantedBy</code>  字段，是表示该服务所在的 Target。如  <code>WantedBy=multi-user.target</code>  指的是该服务所属于  <code>multi-user.target</code>  ；当执行  <code>systemctl enable xxx.service</code>  命令时， <code>xxx.service</code>  的符号链接就会被创建在  <code>/etc/systemd/system/multi-user.target</code>  目录下。可以通过  <code>systemctl get-default</code>  命令查看系统默认启动的 target，一般为  <code>multi-user</code>  或者是  <code>graphical</code> 。因此配置好相应的  <code>WantedBy</code>  字段，可以实现服务的开机启动。</p>\n<p><code>multi-user.target</code>  表示多用户命令行状态；  <code>graphical.target</code>  表示图形用户状态，它依赖于  <code>multi-user.target</code>  。官方文档有一张非常清晰的 [Target 依赖关系图](<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZWRlc2t0b3Aub3JnL3NvZnR3YXJlL3N5c3RlbWQvbWFuL2Jvb3R1cC5odG1sI1N5c3RlbQ==\">https://www.freedesktop.org/software/systemd/man/bootup.html#System</span> Manager Bootup)。</p>\n<p>嘛，如果你是用图形界面的，也是可以用  <code>multi-user.target</code>  的，因为  <code>graphical.target</code>  依赖  <code>multi-user.target</code>  ，可以利用命令  <code>systemctl list-units --type=target</code>  查看到  <code>multi-user.target</code>  是处于 Active 状态的。</p>\n<p>最后，重新加载所有的 systemd 服务，打开自启动并启动服务，其中  <code>@</code>  后面跟随的是你的 wol 网卡名称：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> systemctl daemon-reload</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> wol@eno1</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> systemctl start wol@eno1</pre></td></tr></table></figure><p>note：</p>\n<p>对于 systemd 服务的控制，可以使用如下命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl <span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>unit<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>[command]：</p>\n<ul>\n<li>\n<p>start：立刻启动后面接的 unit。</p>\n</li>\n<li>\n<p>stop：立刻关闭后面接的 unit。</p>\n</li>\n<li>\n<p>restart：立刻关闭后启动后面接的 unit，亦即执行 stop 再 start 的意思。</p>\n</li>\n<li>\n<p>reload：不关闭 unit 的情况下，重新载入配置文件，让设置生效。</p>\n</li>\n<li>\n<p>enable：设置下次开机时，后面接的 unit 会被启动。</p>\n</li>\n<li>\n<p>disable：设置下次开机时，后面接的 unit 不会被启动。</p>\n</li>\n<li>\n<p>status：目前后面接的这个 unit 的状态，会列出有没有正在执行、开机时是否启动等信息。</p>\n</li>\n<li>\n<p>is-active：目前有没有正在运行中。</p>\n</li>\n<li>\n<p>is-enable：开机时有没有默认要启用这个 unit。</p>\n</li>\n<li>\n<p>kill ：不要被 kill 这个名字吓着了，它其实是向运行 unit 的进程发送信号。</p>\n</li>\n<li>\n<p>show：列出 unit 的配置。</p>\n</li>\n<li>\n<p>mask：注销 unit，注销后你就无法启动这个 unit 了。</p>\n</li>\n<li>\n<p>unmask：取消对 unit 的注销。</p>\n</li>\n</ul>\n<p>一些其它命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl poweroff <span class=\"token comment\"># 系统关机</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>systemctl <span class=\"token function\">reboot</span> <span class=\"token comment\"># 重新开机</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>systemctl <span class=\"token function\">suspend</span> <span class=\"token comment\"># 进入暂停模式</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>systemctl hibernate <span class=\"token comment\"># 进入休眠模式</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>systemctl rescue <span class=\"token comment\"># 强制进入救援模式</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>systemctl emergency <span class=\"token comment\"># 强制进入紧急救援模式</span></pre></td></tr></table></figure><p>资料：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvV2FrZS1vbi1MQU4=\">https://wiki.archlinux.org/title/Wake-on-LAN</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmRlYmlhbi5vcmcvV2FrZU9uTGFu\">https://wiki.debian.org/WakeOnLan</span></p>\n<h2 id=\"异常记录查看\"><a class=\"anchor\" href=\"#异常记录查看\">#</a> 异常记录查看</h2>\n<p>使用  <code>last -x shutdown reboot</code>  命令可以查看系统的关机和重启记录，包括异常关机。该命令会显示每次关机或重启的时间、持续时间。</p>\n<p>使用  <code>dmesg | grep &quot;shutdown&quot;</code>  命令可以查看内核的消息缓冲区，筛选出关机的相关信息。</p>\n<p>参考：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly91bml4LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy85ODE5L2hvdy10by1maW5kLW91dC1mcm9tLXRoZS1sb2dzLXdoYXQtY2F1c2VkLXN5c3RlbS1zaHV0ZG93bg==\">https://unix.stackexchange.com/questions/9819/how-to-find-out-from-the-logs-what-caused-system-shutdown</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4MzQ1NjU3L2FydGljbGUvZGV0YWlscy8xMjY4MzMxMzE=\">https://blog.csdn.net/qq_28345657/article/details/126833131</span></p>\n<h2 id=\"系统备份\"><a class=\"anchor\" href=\"#系统备份\">#</a> 系统备份</h2>\n<p>linux 系统说白了就是一个强大的文件系统，既然是文件，哪能不能像日常备份文件那样直接压缩备份呢？答案是可以，只是在备份压缩的时候注意把各个文件的权限都保留下来。</p>\n<p>在备份之前先了解一下 linux 的系统目录结构：</p>\n<table>\n<thead>\n<tr>\n<th>文件夹</th>\n<th>英文全称</th>\n<th>文件夹作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>/boot</td>\n<td>Boot</td>\n<td>存放的启动 Linux 时使用的内核文件，包括连接文件以及镜像文件。</td>\n</tr>\n<tr>\n<td>/bin</td>\n<td>Binaries</td>\n<td>存放着最常用的程序和指令，所有用户都可以执行。是  <code>/usr/bin</code>  目录的软连接。</td>\n</tr>\n<tr>\n<td>/sbin</td>\n<td>Super User Binaries</td>\n<td>保存和系统环境设置相关的命令，只有超级用户可以使用这些命令，有些命令可以允许普通用户查看。是  <code>/usr/sbin</code>  目录的软连接。</td>\n</tr>\n<tr>\n<td>/usr</td>\n<td>Unix Software Resources</td>\n<td>用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。</td>\n</tr>\n<tr>\n<td>/usr/bin</td>\n<td>Unix Software Resources Binaries</td>\n<td>系统用户使用的应用程序与指令。</td>\n</tr>\n<tr>\n<td>/usr/sbin</td>\n<td>Unix Software Resources Superuser Binaries</td>\n<td>超级用户使用的比较高级的管理程序和系统守护程序。</td>\n</tr>\n<tr>\n<td>/usr/local</td>\n<td>Unix Software Resources Local</td>\n<td>安装第三方软件的安装目录，一般是通过编译源码的方式安装的程序。</td>\n</tr>\n<tr>\n<td>/usr/src</td>\n<td>Unix Software Resources Source</td>\n<td>内核源代码默认的放置目录。</td>\n</tr>\n<tr>\n<td>/dev</td>\n<td>Devices</td>\n<td>存放的是 Linux 的外部设备。注意：在 Linux 中访问设备和访问文件的方式是相同的。</td>\n</tr>\n<tr>\n<td>/etc</td>\n<td>Editable Text Configuration Chest</td>\n<td>存放所有的系统需要的配置文件和子目录列表，更改目录下的文件可能会导致系统不能启动。</td>\n</tr>\n<tr>\n<td>/opt</td>\n<td>Optional Application Software Packages</td>\n<td>可选应用软件包，第三方安装的软件保存位置，存放软件安装包。</td>\n</tr>\n<tr>\n<td>/lib</td>\n<td>Library</td>\n<td>存放基本代码库（比如 c++ 库），其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库。</td>\n</tr>\n<tr>\n<td>/proc</td>\n<td>Processes</td>\n<td>虚拟文件系统，数据保存在内存中，存放当前进程信息</td>\n</tr>\n<tr>\n<td>/root</td>\n<td>Root</td>\n<td>系统管理员的用户主目录。</td>\n</tr>\n<tr>\n<td>/tmp</td>\n<td>Temporary</td>\n<td>存放临时文件</td>\n</tr>\n<tr>\n<td>/var</td>\n<td>Variable</td>\n<td>存放经常修改的数据，比如程序运行的日志文件（ <code>/var/log</code>  目录下）。</td>\n</tr>\n<tr>\n<td>/home</td>\n<td>Home</td>\n<td>用户缺省宿主目录。</td>\n</tr>\n<tr>\n<td>/lost+found</td>\n<td>Lost And Found</td>\n<td>一般情况下为空的，存放一些系统出错的检查结果</td>\n</tr>\n<tr>\n<td>/srv</td>\n<td>Server</td>\n<td>服务数据目录</td>\n</tr>\n<tr>\n<td>/sys</td>\n<td>System</td>\n<td>这是 linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs。sysfs 文件系统集成了下面 3 种文件系统的信息：针对进程信息的 proc 文件系统、针对设备的 devfs 文件系统以及针对伪终端的 devpts 文件系统。该文件系统是内核设备树的一个直观反映。当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中。</td>\n</tr>\n<tr>\n<td>/mnt</td>\n<td>Mount</td>\n<td>挂载目录。临时文件系统的安装点，默认挂载光驱和软驱的目录</td>\n</tr>\n<tr>\n<td>/media</td>\n<td>Media</td>\n<td>挂载目录。 挂载媒体设备，如软盘和光盘</td>\n</tr>\n<tr>\n<td>/misc</td>\n<td>Miscellaneous Device</td>\n<td>挂载目录。 挂载 NFS 服务</td>\n</tr>\n<tr>\n<td>/run</td>\n<td>Run</td>\n<td>里面的东西是系统运行时需要的，不能随便删除。当系统重启时，这个目录下的文件应该被删掉或清除；下次系统运行时重新生成。</td>\n</tr>\n</tbody>\n</table>\n<p>备份系统：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-s</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">tar</span> <span class=\"token parameter variable\">-zcvpf</span> backup.tgz <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>/proc <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>/lost+found <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>/backup.tgz <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>/mnt <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>/sys <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>/media <span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span>/srv/dev-disk-by-uuid* /</pre></td></tr></table></figure><p>恢复系统：</p>\n<p>如果原来的 Debian 系统已经崩溃，无法进入。则可以在目标机上用 ISO、LiveCD 等启动，挂载磁盘（一般会自动挂载到  <code>/media</code>  文件夹）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-s</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">tar</span> <span class=\"token parameter variable\">-zcvpf</span> backup.tgz <span class=\"token parameter variable\">-C</span> /media/<span class=\"token operator\">&lt;</span>对应的磁盘<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> proc lost+found mnt sys media</pre></td></tr></table></figure><h1 id=\"安装-openmediavault-6x\"><a class=\"anchor\" href=\"#安装-openmediavault-6x\">#</a> 安装 openmediavault 6.x</h1>\n<p>在操作如下流程前，要进行备份！备份！备份！</p>\n<p>具体安装以 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9wZW5tZWRpYXZhdWx0Lm9yZy9lbi9sYXRlc3QvaW5zdGFsbGF0aW9uL29uX2RlYmlhbi5odG1s\">https://docs.openmediavault.org/en/latest/installation/on_debian.html</span> 为准。</p>\n<p>1、临时配置环境变量</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">LANG</span></span><span class=\"token operator\">=</span>C.UTF-8</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">DEBIAN_FRONTEND</span><span class=\"token operator\">=</span>noninteractive</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">APT_LISTCHANGES_FRONTEND</span><span class=\"token operator\">=</span>none</pre></td></tr></table></figure><p>2、添加软件包存储库</p>\n<p>进入文件编辑：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">vim</span> /etc/apt/sources.list.d/openmediavault.list</pre></td></tr></table></figure><p>然后粘贴以下存储库链接（这里使用的是 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLmJmc3UuZWR1LmNuL2hlbHAvb3Blbm1lZGlhdmF1bHQv\">北外镜像</span>，以加快国内访问速度，当然你也可以使用源链接），保存退出：</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"><span>openmediavault.list</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>deb https://mirrors.bfsu.edu.cn/OpenMediaVault/public shaitan main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>deb https://mirrors.bfsu.edu.cn/OpenMediaVault/packages shaitan main</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>## Uncomment the following line to add software from the proposed repository.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># deb https://mirrors.bfsu.edu.cn/OpenMediaVault/public shaitan-proposed main</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># deb https://mirrors.bfsu.edu.cn/OpenMediaVault/packages shaitan-proposed main</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>## This software is not part of OpenMediaVault, but is offered by third-party</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>## developers as a service to OpenMediaVault users.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># deb https://mirrors.bfsu.edu.cn/OpenMediaVault/public shaitan partner</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># deb https://mirrors.bfsu.edu.cn/OpenMediaVault/packages shaitan partner</pre></td></tr></table></figure><p>3、添加 openmediavault 密钥</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">--yes</span> gnupg</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">wget</span> <span class=\"token parameter variable\">--quiet</span> --output-document<span class=\"token operator\">=</span>- https://packages.openmediavault.org/public/archive.key <span class=\"token operator\">|</span> gpg <span class=\"token parameter variable\">--dearmor</span> <span class=\"token parameter variable\">--yes</span> <span class=\"token parameter variable\">--output</span> <span class=\"token string\">\"/usr/share/keyrings/openmediavault-archive-keyring.gpg\"</span></pre></td></tr></table></figure><p>4、更新软件包源并安装 omv</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">apt-get</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">apt-get</span> <span class=\"token parameter variable\">--yes</span> --auto-remove --show-upgraded <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre>    --allow-downgrades --allow-change-held-packages <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre>    --no-install-recommends <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"\"></td><td><pre>    <span class=\"token parameter variable\">--option</span> DPkg::Options::<span class=\"token operator\">=</span><span class=\"token string\">\"--force-confdef\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td data-command=\"\"></td><td><pre>    <span class=\"token parameter variable\">--option</span> DPkg::Options::<span class=\"token operator\">=</span><span class=\"token string\">\"--force-confold\"</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td data-command=\"\"></td><td><pre>    <span class=\"token function\">install</span> openmediavault</pre></td></tr></table></figure><p>5、同步系统配置</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>omv-confdbadm populate</pre></td></tr></table></figure><p>note：</p>\n<p>对于网络服务，现在只解析  <code>/etc/network/interfaces</code>  以获取当前的网络配置。 如果以不同的方式配置网络（例如通过  <code>systemd</code>  或  <code>NetworkManager</code> ），则不会填充数据库，并且不包含使用  <code>netplan for systemd-networkd 和 systemd-resolved</code>  部署网络配置所需的信息。 在这种情况下，请使用  <code>omv-firstaid</code>  命令执行初始网络配置。</p>\n<p>如果想通过 openmediavault 使用的服务重新部署网络配置，则执行：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">vim</span> /etc/network/interfaces</pre></td></tr></table></figure><p>然后把里面的网卡配置用  <code>#</code>  注释掉，接着：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">rm</span> /etc/systemd/network/*</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>netplan apply</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>omv-salt deploy run systemd-networkd</pre></td></tr></table></figure><h2 id=\"omv6-基本配置\"><a class=\"anchor\" href=\"#omv6-基本配置\">#</a> omv6 基本配置</h2>\n<h2 id=\"用户账户设置\"><a class=\"anchor\" href=\"#用户账户设置\">#</a> 用户账户设置</h2>\n<p>安装完 omv 后，如果有使用  <code>同步系统配置</code>  操作，那么，在  <code>用户</code>  -&gt;  <code>用户</code>  管理中可以看到前面安装系统时创建的用户，之后，你可以在这里创建或修改各类用户；为了安全你也可以禁掉 root 用户，以避免 root 登录，需要注意权限问题，避免登录 omv web 无法操作。</p>\n<p>note：如果存在多个用户，在众多用户里，至少要有一个用户添加到  <code>openmediavault-admin</code>  的  <code>ssh group</code>  中，这将决定在登录 omv web 后是否拥有配置操作，否则任意用户登录 omv web 上都不存完整的配置操作。具体可看 <strong>omv 登陆后界面只剩仪表盘</strong> 。</p>\n<h2 id=\"配置-ssh\"><a class=\"anchor\" href=\"#配置-ssh\">#</a> 配置 SSH</h2>\n<p>进入  <code>服务</code>  -&gt;  <code>SSH</code> ，选择勾选  <code>已启用</code>  选项，接着按个人需求修改配置，同时为能 SSH 登录操作的用户添加到  <code>ssh group</code>  ；如果你想为了安全，而选择关闭  <code>允许 root 登陆</code>  和  <code>密码验证</code>  选项，那么需要注意的是，至少要为一个用户添加  <code>ssh group</code>  ，否则将没有用户可以登录 SSH，同时为用户配置好 SSH 密钥对。</p>\n<p>note：SSH 密钥对生成，需要先在本机系统中（即需要控制的机器上，一般就是我们的 windows 系统上），输入  <code>ssh-keygen</code>  命令，然后输入存储的路径及命名  <code>~/.ssh/omv-id_rsa</code>  ，如果需要为调用私钥而添加密码认证，则输入密码，否者直接留空回车，不设密码，最后再次确认回车，至此就生成了 SSH 密钥对了；紧接着在 omv web 的  <code>用户</code>  -&gt;  <code>用户</code>  中选择你需要进行 SSH 密钥登录的账户，然后编辑，在  <code>SSH 公钥</code>  中添加刚才生成的密钥对中的公钥（即  <code>omv-id_rsa.pub</code>  ），至此就完成了。</p>\n<h2 id=\"创建-raid-软阵列\"><a class=\"anchor\" href=\"#创建-raid-软阵列\">#</a> 创建 Raid 软阵列</h2>\n<p>在这里，不选择在 omv 页面上创建，而是使用命令创建。以 Raid 1 为例：</p>\n<ol>\n<li>\n<p>准备两个硬盘，最好使用同型号的不同批次跟产期的，如果选择不同型号的，那么要考虑转速、缓存、容量这些尽可能一致。</p>\n</li>\n<li>\n<p><code>lsblk</code>  获取需要建立 Raid 的磁盘名称  <code>sdx</code>  （sdx 可以为 sda、sdb 等）。</p>\n</li>\n<li>\n<p>使用  <code>fdisk /dev/sdx</code>  分别为两块磁盘创建单一分区。</p>\n<ul>\n<li><code>m</code>  ：查看命令操作。</li>\n<li><code>d</code>  ：删除已有分区。</li>\n<li><code>n</code>  ：创建新的分区。</li>\n<li><code>p</code>  ：查看创建分区。</li>\n<li><code>w</code>  ：应用分区信息。</li>\n</ul>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>按 n 创建新的分区。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>然后按 p 选择主分区。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>接下来选择分区号为 1。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>按两次回车键默认将整个容量分配给它。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>然后，按 p 来打印创建好的分区。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>按 l，列出所有可用的类型。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>按 t 修改分区类型。</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>键入 29 设置为 Linux 的 RAID 类型，然后按 Enter 确认。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>然后再次使用 p 查看我们所做的更改。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>使用 w 保存更改。</pre></td></tr></table></figure></li>\n<li>\n<p>利用  <code>mdadm</code>  命令建立 Raid 软阵列。</p>\n<ul>\n<li>\n<p>检查 sdx 分区并确认 Raid 分区的类型  <code>mdadm -E /dev/sdx</code>  。</p>\n</li>\n<li>\n<p>假设用  <code>dev/sdb1</code>  和  <code>dev/sdc1</code>  两个磁盘创建一个名为  <code>/dev/md0</code>  的 Raid 1 设备  <code>mdadm --create /dev/md0 --level=1 --raid-device=2 /dev/sd[b-c]1</code>  。</p>\n</li>\n<li>\n<p>查看 Raid 同步状态  <code>cat /proc/mdstat</code>  。初次建立构建，需要很长一段时间。可以通过以下命令调整 Raid 同步速度：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">sysctl</span> <span class=\"token parameter variable\">-w</span> <span class=\"token assign-left variable\">dev.raid.speed_limit_max</span><span class=\"token operator\">=</span><span class=\"token number\">2000000</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">sysctl</span> <span class=\"token parameter variable\">-w</span> <span class=\"token assign-left variable\">dev.raid.speed_limit_min</span><span class=\"token operator\">=</span><span class=\"token number\">100000</span></pre></td></tr></table></figure></li>\n<li>\n<p>使用  <code>mdadm -E /dev/sdx1</code>  分别查看 Raid 设备类型。</p>\n</li>\n<li>\n<p>为  <code>dev/md0</code>  创建 ext4 文件系统  <code>mkfs.ext4 /dev/md0</code>  ，最好等初始化构建完成后操作。</p>\n</li>\n<li>\n<p>检查 Raid 信息  <code>mdadm -D /dev/md0</code>  。</p>\n</li>\n</ul>\n</li>\n</ol>\n<p>常见的 RAID 磁盘阵列：</p>\n<table>\n<thead>\n<tr>\n<th>阵列</th>\n<th>描述</th>\n<th>特点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>JBOD（线性）</td>\n<td>JBOD 不是标准的 RAID 级别，它只是在近几年才被一些厂家提出，并被广泛采用。虽然 JBOD 让多个磁盘看来似乎只有一个，但它是通过把多个驱动器合并成一个大的逻辑磁盘来做到这一点的。</td>\n<td>- 任意一块硬盘损坏，整个 JBOD 都无法使用。&lt;br/&gt;- 未损坏的硬盘上的数据不会丢失，但恢复数据存在门槛。</td>\n</tr>\n<tr>\n<td>RAID 0</td>\n<td>RAID 0 是组建磁盘阵列中最简单的一种形式，只需要 2 块以上的硬盘即可。 RAID 0 是 RAID 磁盘阵列中性能最好的硬盘组合方式，但没有提供冗余或错误修复能力。</td>\n<td>按照一定规则，将文件拆分存储在 RAID 0 中，一旦一块硬盘损坏，整个 RAID 0 的所有数据全部丢失。</td>\n</tr>\n<tr>\n<td>RAID 1（镜像）</td>\n<td>RAID 1 称为磁盘镜像，由至少 2 块硬盘组成。原理是把一个磁盘的数据镜像到另一个磁盘上，也就是说数据在写入一块磁盘的同时，会在另一块闲置的磁盘上生成镜像文件。只要系统中任何一对镜像盘中至少有一块磁盘可以使用，甚至可以在一半数量的硬盘出现问题时系统都可以正常运行。它是 RAID 磁盘阵列中性能最差，数据安全性最佳的。</td>\n<td>会损失一半硬盘容量。</td>\n</tr>\n<tr>\n<td>RAID 5</td>\n<td>RAID 5 被称为 “分布式奇偶校验的独立磁盘结构” ，需最低 3 块硬盘组成。&lt;br/&gt; 每在 RAID 5 中存入一个文件，3 块硬盘中：1 块用于存储该文件；2 块用于生成奇偶校验信息。</td>\n<td>只要 RAID 5 中只有 1 块硬盘损坏，就可以替换该硬盘并恢复数据；会损失 1 块硬盘容量。</td>\n</tr>\n<tr>\n<td>RAID 6</td>\n<td>RAID 6 是对 RAID 5 的扩展，需最低 4 块硬盘组成。&lt;br/&gt; 每在 RAID 6 中存入一个文件，4 块硬盘中：2 块用于存储该文件；2 块用于生成奇偶校验信息。</td>\n<td>只要 RAID 6 中有任意 2 块硬盘损坏，就可以替换这 2 块硬盘并恢复数据；会损失 2 块硬盘容量。</td>\n</tr>\n<tr>\n<td>RAID 10</td>\n<td>RAID 10 需要至少 4 块硬盘组成，每 2 块硬盘组成一个 RAID 1 ，2 个 RAID 1 组成一个 RAID 0 。性能与安全性在 RAID 0 和 RAID 1 中取得了一个平衡。</td>\n<td>性能比 RAID 0 差，比 RAID 1 高；安全性同于 RAID 1 。</td>\n</tr>\n</tbody>\n</table>\n<p>扩展：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZmVsaXgtenAvcC85NzM4NzI0Lmh0bWw=\">https://www.cnblogs.com/felix-zp/p/9738724.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZmx5c2ZlcS5zaXRlL2luZGV4LnBocC9hcmNoaXZlcy82NS8=\">https://www.flysfeq.site/index.php/archives/65/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vMzd5YW4vcC83NDg5NTk3Lmh0bWw=\">https://www.cnblogs.com/37yan/p/7489597.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbHBmdXR1cmUvcC82Mzg1NjU3Lmh0bWw=\">https://www.cnblogs.com/lpfuture/p/6385657.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC1hdGxhcy5yZWFkdGhlZG9jcy5pby96aC1jbi9sYXRlc3QvbGludXgvc3RvcmFnZS9zb2Z0d2FyZV9yYWlkL3JhaWQtY2hlY2suaHRtbA==\">https://cloud-atlas.readthedocs.io/zh-cn/latest/linux/storage/software_raid/raid-check.html</span></p>\n<h2 id=\"替换更新镜像源\"><a class=\"anchor\" href=\"#替换更新镜像源\">#</a> 替换更新镜像源</h2>\n<p>配置基本链接的镜像源（原因是在你安装完 omv 后，前面配置的软件包存储库链接将会修改为官方默认的链接，此时需要重新设置镜像）：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>omv-env <span class=\"token builtin class-name\">set</span> OMV_APT_REPOSITORY_URL <span class=\"token string\">\"https://mirrors.bfsu.edu.cn/OpenMediaVault/public\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>omv-env <span class=\"token builtin class-name\">set</span> OMV_APT_ALT_REPOSITORY_URL <span class=\"token string\">\"https://mirrors.bfsu.edu.cn/OpenMediaVault/packages\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>omv-env <span class=\"token builtin class-name\">set</span> OMV_APT_KERNEL_BACKPORTS_REPOSITORY_URL <span class=\"token string\">\"https://mirrors.bfsu.edu.cn/debian\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>omv-env <span class=\"token builtin class-name\">set</span> OMV_APT_SECURITY_REPOSITORY_URL <span class=\"token string\">\"https://mirrors.bfsu.edu.cn/debian-security\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>omv-salt stage run all</pre></td></tr></table></figure><p>然后执行：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">reboot</span></pre></td></tr></table></figure><p>重启后回到 omv 网页，你会看到有提示显示可以更新软件。</p>\n<p>note：</p>\n<p>对于使用  <code>omv-env set</code>  更换源，其实是在不同的  <code>openmediavault</code>  文件写入，这些文件可以在  <code>/etc/apt/sources.list.d/</code>  中找到。</p>\n<h2 id=\"安装-omv-extras\"><a class=\"anchor\" href=\"#安装-omv-extras\">#</a> 安装 omv-extras</h2>\n<p>由于国内原因，防 github 解析错误，执行以下操作，如果这时候已经出现网络问题，则使用手动方法，查看 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLzUyMXh1ZXdlaWhhbi9HaXRIdWI1MjA=\">GitHub520</span> ：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">\"/# GitHub520 Host Start/Q\"</span> /etc/hosts <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">curl</span> https://raw.hellogithub.com/hosts <span class=\"token operator\">>></span> /etc/hosts</pre></td></tr></table></figure><p>根据<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLm9tdi1leHRyYXMub3JnL2Rva3UucGhwP2lkPW9tdjY6bmV3X3VzZXJfZ3VpZGUjb212LWV4dHJhcw==\">官方</span>提供，安装 omv-extras：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> - https://github.com/OpenMediaVault-Plugin-Developers/packages/raw/master/install <span class=\"token operator\">|</span> <span class=\"token function\">bash</span></pre></td></tr></table></figure><p>然后刷新 omv 网页，即可在  <code>系统</code>  中找到 omv-extras。</p>\n<p>如果网络不好可以手动安装：</p>\n<ol>\n<li>进入 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL09wZW5NZWRpYVZhdWx0LVBsdWdpbi1EZXZlbG9wZXJzL3BhY2thZ2Vz\">https://github.com/OpenMediaVault-Plugin-Developers/packages</span> 下载对应的插件包，然后把插件包放到 omv 上，路径自己决定，然后进入该路径执行：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>dpkg <span class=\"token parameter variable\">-i</span> openmediavault-omvextrasorg_xxx.deb</pre></td></tr></table></figure><p>更新 omv-extras 镜像源：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>omv-env <span class=\"token builtin class-name\">set</span> OMV_EXTRAS_APT_REPOSITORY_URL <span class=\"token string\">\"https://mirrors.bfsu.edu.cn/OpenMediaVault/openmediavault-plugin-developers\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>omv-env <span class=\"token builtin class-name\">set</span> OMV_DOCKER_APT_REPOSITORY_URL <span class=\"token string\">\"https://mirrors.bfsu.edu.cn/docker-ce/linux/debian\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>omv-env <span class=\"token builtin class-name\">set</span> OMV_PROXMOX_APT_REPOSITORY_URL <span class=\"token string\">\"https://mirrors.bfsu.edu.cn/proxmox/debian\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>omv-salt stage run all</pre></td></tr></table></figure><h2 id=\"安装-docker\"><a class=\"anchor\" href=\"#安装-docker\">#</a> 安装 docker</h2>\n<p>进入  <code>系统</code>  -&gt;  <code>插件</code> ，搜索  <code>compose</code>  ，点击选择下载，然后等待下载完成；</p>\n<p>进入  <code>系统</code>  -&gt;  <code>omv-extras</code> ，勾选  <code>Docker repo</code> ，点保存；</p>\n<p>最后在  <code>服务</code>  -&gt;  <code>Compose</code>  中可以找到  <code>设置</code> ，查看 Docker 状态是否为  <code>Installed and running</code> ，如果不是，可以尝试重启 Docker 或者重新安装 Docker；再不行就回到第二点先取消勾选接着保存，然后再把   <code>Docker repo</code>  勾选上保存并重复后面操作。</p>\n<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLm9tdi1leHRyYXMub3JnL2Rva3UucGhwP2lkPW9tdjY6ZG9ja2VyX2luX29tdiNkb2t1d2lraV9fdG9w\">https://wiki.omv-extras.org/doku.php?id=omv6:docker_in_omv#dokuwiki__top</span></p>\n<p>如果 Docker 无法运行，输入  <code>systemctl status docker</code>  查看状态，然后再执行  <code>systemctl restart docker</code>  看是否成功，如果显示如下错误：</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Job for docker.service failed because the control process exited with error code.</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>See \"systemctl status docker.service\" and \"journalctl -xe\" for details.</pre></td></tr></table></figure><p>可以使用命令  <code>journalctl -xe</code>  和  <code>dockerd --debug</code>  来分析无法运行的错误。</p>\n<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNTU5MDY1MDMvZG9ja2VyLWhvdy10by1maXgtam9iLWZvci1kb2NrZXItc2VydmljZS1mYWlsZWQtYmVjYXVzZS10aGUtY29udHJvbC1wcm9jZXNzLWV4\">https://stackoverflow.com/questions/55906503/docker-how-to-fix-job-for-docker-service-failed-because-the-control-process-ex</span></p>\n<h3 id=\"docker-换源\"><a class=\"anchor\" href=\"#docker-换源\">#</a> docker 换源</h3>\n<p>编辑  <code>/etc/docker/daemon.json</code>  配置文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">vim</span> /etc/docker/daemon.json</pre></td></tr></table></figure><p>更改为以下信息：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"><span>daemon.json</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"data-root\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"/var/lib/docker\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//docker 存储路径</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"registry-mirrors\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">\"https://docker.mirrors.ustc.edu.cn\"</span> <span class=\"token comment\">// 更改换源</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token property\">\"storage-driver\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"overlay2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token property\">\"storage-opts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token string\">\"overlay2.override_kernel_check=true\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token string\">\"overlay2.size=15G\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token property\">\"log-driver\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"json-file\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token property\">\"log-opts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token property\">\"max-size\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"80m\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token property\">\"max-file\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>note：如果是在  <code>/etc/docker/daemon.json</code>  文件上指定 Docker 存储路径，那么，在  <code>服务</code>  -&gt;  <code>Compose</code>  -&gt;  <code>设置</code>  -&gt;  <code>Docker</code>  中的  <code>Docker 存储</code>  上留空配置（该下方有备注说明）。</p>\n<p>最后，使用如下命令重启生效：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>systemctl daemon-reload</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>systemctl restart <span class=\"token function\">docker</span></pre></td></tr></table></figure><p>完成后使用  <code>docker info</code>  命令，查看  <code>Registry Mirrors:</code>  是否为配置的镜像源。</p>\n<p>测试 docker 镜像下载，可以通过拉取 helloword 镜像测试：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">docker</span> pull helloword</pre></td></tr></table></figure><p>如果成功拉取则证明当前配置能成功链接上 docker hub 镜像网上，否则则需要检查网络及镜像源是否有效。</p>\n<h2 id=\"docker-应用部署\"><a class=\"anchor\" href=\"#docker-应用部署\">#</a> docker 应用部署</h2>\n<p>安装完 docker 后，那么你就可以用它部署各种好玩的应用，例如：私人影院、音乐播放、相册管理等；</p>\n<p><a href=\"https://arachnid.cc/tags/docker/\">https://arachnid.cc/tags/docker/</a></p>\n<h1 id=\"other\"><a class=\"anchor\" href=\"#other\">#</a> other</h1>\n<h2 id=\"omv-登陆后界面只剩仪表盘\"><a class=\"anchor\" href=\"#omv-登陆后界面只剩仪表盘\">#</a> omv 登陆后界面只剩仪表盘</h2>\n<p>一般会出现这种情况是因为更换了用户，但管理权限没有给过去，或者以非管理员登录等，总之就是登录用户没有足够的权限，如果你还禁止了 root 登录，那么你可以使用如下命令把权限给到你要登录的用户  <code>USER_NAME</code>  上：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[user@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-G</span> openmediavault-admin USER_NAME</pre></td></tr></table></figure><p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bS5vcGVubWVkaWF2YXVsdC5vcmcvaW5kZXgucGhwP3RocmVhZC80NTQ0My1vbXY2LXdlYi1ndWktb25seS13aXRoLWRhc2hib2FyZC1sb3N0LWV2ZXJ5dGhpbmctYW5kLWktbS1hZG1pbi11c2VyLw==\">https://forum.openmediavault.org/index.php?thread/45443-omv6-web-gui-only-with-dashboard-lost-everything-and-i-m-admin-user/</span></p>\n<h2 id=\"devdm-文件系统\"><a class=\"anchor\" href=\"#devdm-文件系统\">#</a> /dev/dm-* 文件系统</h2>\n<p>dm 是 Device Mapper 的缩写，Device Mapper 是 Linux 2.6 内核中提供的一种从逻辑设备到物理设备的映射框架机制，在该机制下，用户可以很方便的根据自己的需要制定实现存储资源的管理策略，当前比较流行的 Linux 下的逻辑卷管理器如 LVM2（Linux Volume Manager 2 version)、EVMS (Enterprise Volume Management System)、dmraid (Device Mapper Raid Tool) 等都是基于该机制实现的。</p>\n<p>既然是映射，那么就有对应关系，那到底对应着什么，可以使用如下命令查看：</p>\n<ol>\n<li><code>dm-*</code>  一般是在  <code>/dev</code>  文件夹里，而且还不止一个，可以使用  <code>ls /dev/dm*</code>  查看所有  <code>dm</code>  设备映射。</li>\n<li>使用命令  <code>dmsetup ls</code>  查看  <code>dm-*</code>  对应的设备，其中  <code>dm</code>  后面的数字对应（xxx， xx）里的第二个数字。如果想详细查看信息，可以使用  <code>dmsetup info</code>  命令，而  <code>Major, minor:</code>  对应 （xxx， xx）。</li>\n<li>输入  <code>more /etc/fstab</code>  命令查找对应关系，如此便能找到映射点。</li>\n</ol>\n<h2 id=\"挂载新硬盘文件系统失败\"><a class=\"anchor\" href=\"#挂载新硬盘文件系统失败\">#</a> 挂载新硬盘文件系统失败</h2>\n<p>这里导致出现的问题是新硬盘替换旧硬盘，然后旧硬盘可能有共享、引用之类的，因此在旧硬盘不存在的情况下，当你为新硬盘建立了文件系统后，并为其挂载保存的的时候，会出现无法保存并挂载成功，这时候就必须先把旧的不存在的硬盘的文件系统卸载掉先，否者会影响新的文件系统挂载；而如果旧的文件系统是有使用共享服务的，那么需要根据其依赖关系（ <code>磁盘</code>  -&gt;  <code>文件系统</code>  -&gt;  <code>共享文件夹</code>  -&gt;  <code>服务(SMB, FTP等)</code> ）逐步解除并保证卸载成功，这样才可以为新的硬盘挂载文件系统。</p>\n<h2 id=\"手动测试硬盘\"><a class=\"anchor\" href=\"#手动测试硬盘\">#</a> 手动测试硬盘</h2>\n<ol>\n<li>使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYW4uYXJjaGxpbnV4Lm9yZy9tYW4vc21hcnRjdGwuOA==\">smartctl</span> 分析硬盘\n<ul>\n<li><code>smartctl -i /dev/sdxy</code>  显示磁盘基本信息。</li>\n<li><code>smartctl -H /dev/sdxy</code>  显示硬盘的健康状况。</li>\n<li><code>smartctl -A /dev/sdxy</code>  显示硬盘的详细信息。</li>\n<li><code>smartctl -t short /dev/sdxy</code>  后台检测硬盘，消耗时间短，用第二条命令查看结果。</li>\n<li><code>smartctl -t long /dev/sdxy</code>  后台检测硬盘，消耗时间长，用第二条命令查看结果。</li>\n<li><code>smartctl -l selftest /dev/sdxy</code>  显示硬盘检测日志。</li>\n<li><code>smartctl -l error /dev/sda</code>  显示硬盘错误汇总。</li>\n</ul>\n</li>\n<li>使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYW4uYXJjaGxpbnV4Lm9yZy9tYW4vYmFkYmxvY2tzLjg=\">badblocks</span> 扫描硬盘\n<ul>\n<li><code>badblocks -sv -b 512 -o ~/sdx_blocks.txt /dev/sdx</code>  前台显示扫描进度，并将结果保存到文档上。</li>\n<li>-b, 指定磁盘区块大小，单位 byte，理解为最小扫描单位。（如果显示： <code>badblocks: Value too large for defined data type invalid end block (15628053168): must be 32-bit value</code>  则说明设置的 block 大小太小了，可用  <code>fdisk -l /dev/sdx </code>  查看硬盘 block 最小区块大小）</li>\n<li>-o, 指定扫描结果的输出路径</li>\n<li>-s, 检查时显示进度</li>\n<li>-v, 检查时显示详细的信息</li>\n<li>-w, 检查时执行有破坏性的写入测试，注意这个操作会破坏硬盘上的数据，请提前做好数据备份</li>\n<li>-n, 检查时执行没有破坏性的写入测试，只读操作</li>\n</ul>\n</li>\n<li>使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYW4uYXJjaGxpbnV4Lm9yZy9tYW4vaGRwYXJtLjg=\">hdparm</span> 测硬盘读速\n<ul>\n<li><code>hdparm -Ttv /dev/sdxy</code>  该命令将显示磁盘的缓存和读性能。</li>\n<li><code>hdparm -tv --direct /dev/sdxy</code>  添加  <code>--direct</code>  选项将绕过硬盘驱动器的缓冲区高速缓存，从而直接从磁盘读取。</li>\n</ul>\n</li>\n<li>使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYW4uYXJjaGxpbnV4Lm9yZy9tYW4vZGQuMQ==\">dd</span> 测硬盘写速\n<ul>\n<li><code>sync; dd if=/dev/zero of=/srv/dev-disk-by-uuid-xxx/tempfile bs=1M count=5120; sync</code>  以 1MByte 为单位，写入 5120 次，即写入往 tempfile 文件写入 5GB 大小的零数据值。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"omv-开关机导致硬盘不安全计数增加\"><a class=\"anchor\" href=\"#omv-开关机导致硬盘不安全计数增加\">#</a> omv 开关机导致硬盘不安全计数增加</h2>\n<p>在 SCSI disk 中，有一个  <code>manage_start_stop</code>  flag，它可以控制 disk 的启停，将该值置 1 的时候，将使得 disk 减速关闭，从而让 disk 关机时磁头会复位；如果关机时 disk 磁头不复位直接断电，就会有磁头弹回去的声音，并且这种情况下，硬盘的 SMART 数据里，C0（不安全关机计数）的值应该会 +1，硬盘也有损坏的风险。</p>\n<p>因此，正常情况下，普通 SATA 硬盘的这项属性的值默认为 1，关机时磁头会复位。可以通过下面的命令查看所有磁盘这项属性的值：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">cat</span> /sys/class/scsi_disk/*/manage_start_stop</pre></td></tr></table></figure><p>如果上面的文件不存在，可以使用以下命令查看：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">cat</span> /sys/block/sdX/device/scsi_disk/*/manage_start_stop</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># sdX 为对应硬盘符</span></pre></td></tr></table></figure><p>然后，对于修改，可以使用：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> /sys/class/scsi_disk/*/manage_start_stop<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token number\">1</span> <span class=\"token operator\">></span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span></pre></td></tr></table></figure><p>对所有的 SCSI disk 进行更改，同样的，可以把该条命令增加至开机脚本，使其每次生效。</p>\n<p>参考：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGludXgtYXRhLm9yZy9zaHV0ZG93bi5odG1s\">Serial ATA (SATA) shutdown info</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb21hY28uY2EvYmxvZy8yMDE3LzA4LzA2L2hvdy10by1zcGluLWRvd24taGFyZC1kaXNrcy1hdC1zaHV0ZG93bi1vbi1sc2ktaGJhcy1vbi1saW51eC8=\">How To Spin Down Hard Disks at Shutdown on LSI HBAs on Linux</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RvcnZhbGRzL2xpbnV4L2NvbW1pdC8zY2MyZmZlNWMxNmRjNjVkZmFjMzU0YmM1YjViYzk4ZDNiMzk3NTY3\">https://github.com/torvalds/linux/commit/3cc2ffe5c16dc65dfac354bc5b5bc98d3b397567</span></p>\n<h2 id=\"硬盘-apm-及-aam-设置\"><a class=\"anchor\" href=\"#硬盘-apm-及-aam-设置\">#</a> 硬盘 APM 及 AAM 设置</h2>\n<p>在 omv wed 的  <code>存储器</code>  -&gt;  <code>磁盘</code>  -&gt;  <code>编辑</code>  中，存在 APM（高级电源管理）和 AAM（自动声音管理）。AAM（Automactic acoustics management）自动噪声管理，指通过调整硬盘盘片转速在安静和高性能之间切换；APM（Advanced power management）高级电源管理，即调节硬盘的睡眠状态，有利于节省移动设备的电能。</p>\n<p>所以，适当降低 AAM 有利于降低转速，实现噪声的控制，增大 APM 有利于杜绝硬盘进入睡眠，从而避免磁头频繁进出停泊区产生摩擦噪音。</p>\n<p>对于  APM/AAM 信息的获取，可以使用以下命令查看：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre>hdparm <span class=\"token parameter variable\">-B</span> <span class=\"token parameter variable\">-M</span> /dev/sdX</pre></td></tr></table></figure><p>如果您的驱动器不支持 AAM，您将收到消息： <code>APM_level=not support</code>  ；</p>\n<p>如果您的驱动器不支持 AAM，您将收到消息： <code>acoustic=not support</code>  。</p>\n<p>然后根据实际情况，在 omv wed 的  <code>存储器</code>  -&gt;  <code>磁盘</code>  -&gt;  <code>编辑</code>  中进行设置。</p>\n<h2 id=\"权限管理\"><a class=\"anchor\" href=\"#权限管理\">#</a> 权限管理</h2>\n<h3 id=\"共享权限\"><a class=\"anchor\" href=\"#共享权限\">#</a> 共享权限</h3>\n<p>FTP/SMB 服务共享权限 (OMV 系统) &lt; 用户权限 (OMV 系统) &lt; 文件夹 / 文件权限 &lt; ACL 特殊权限</p>\n<p>eg：</p>\n<ol>\n<li>当 “共享文件夹 A” 权限缺少  <code>r</code>  读权限时，即使” 用户权限” 设置了  <code>rw</code>  读写也无法列出该文件夹里的内容。</li>\n<li>如果 “用户 B” 对 “共享文件夹 C” 设置了 “禁止读写”，即使该文件夹权限是  <code>rwx</code>  读写执行，也无法打开 “共享文件夹 C” 。</li>\n</ol>\n<h3 id=\"登录权限\"><a class=\"anchor\" href=\"#登录权限\">#</a> 登录权限</h3>\n<p>该权限主要是服务器管理处理，除了上面的禁用 ssh 上的 root 登录及私钥访问，还应禁用避免使用  <code>su</code>  和  <code>sudo</code>  切换到 root 用户。</p>\n<ul>\n<li>\n<p>禁用  <code>su</code>  命令：</p>\n<ul>\n<li>\n<p>修改  <code>/etc/pam.d/su</code>  配置</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">vim</span> /etc/pam.d/su</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># 去除以下注释</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre>auth required pam_wheel.so</pre></td></tr></table></figure></li>\n<li>\n<p>修改  <code>/etc/login.defs</code>  配置</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">vim</span> /etc/login.defs</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># 找到 SU_WHEEL_ONLY 定义并改写成以下配置</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre>SU_WHEEL_ONLY <span class=\"token function\">yes</span></pre></td></tr></table></figure></li>\n</ul>\n<p>如此一来，只有指定加入  <code>wheel</code>  group 的用户才能使用  <code>su</code>  命令，同样也就禁用了  <code>su -</code>  切换 root 了；</p>\n</li>\n<li>\n<p>禁用  <code>su -</code>  命令：</p>\n<p>如果觉得禁用  <code>su</code>  该操作覆盖范围太大了，可以通过  <code>visudo</code>  命令修改  <code>/etc/sudoers</code>  文件，对指定的用户或群组进行限制，eg：</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"><span>sudoers</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre># User privilege specification</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>admin   ALL=(ALL:ALL)     ALL, !/usr/bin/su -</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre># Allow members of group sudo to execute any command</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>%wheel  ALL=(ALL:ALL)     ALL, !/usr/bin/su -</pre></td></tr></table></figure><p>以上例子分别表示对  <code>admin</code>  用户及  <code>wheel</code>  群组做了  <code>su -</code>  命令限制。</p>\n</li>\n<li>\n<p>禁用  <code>sudo</code>  升权：</p>\n<p>一般来说，除了安装系统的时候配置的用户拥有  <code>sudo</code>  权限，后期创建用户时，除非明确加入  <code>sudo</code>  组或改写  <code>/etc/sudoers</code>  文件配置，否则是不支持  <code>sudo</code>  命令操作的。</p>\n</li>\n<li>\n<p>防止  <code>sudo su -</code>  直接串权：</p>\n<p>虽说利用  <code>sudo</code>  升权后，同样拥有 root 权限，但与实际登录 root 账户有所区别，毕竟使用  <code>sudo</code>  是有操作记录的，而直接 root 登录后无法跟踪其操作。</p>\n<p>通过设置上面的 &quot;<strong> 禁用  <code>su</code>  命令</strong> &quot;或&quot;<strong> 禁用  <code>su -</code>  命令</strong> &quot; ，同样可以防止  <code>sudo su -</code>  操作，但无法防止  <code>sudo -</code>  后执行  <code>su -</code>  切换到 root 环境，如果要禁掉该操作，可以简单粗暴的使用上面的 &quot; 禁用  <code>sudo</code>  升权 &quot; 操作，或者通过修改  <code>vim /etc/pam.d/su</code>  文件进行滤除操作。</p>\n</li>\n<li>\n<p>root 用户禁用：</p>\n<p><strong>（注意：在进行该操作前要至少确保有一个用户可以提权到 root 权限，以避免出现没有超级权限的可能。）</strong></p>\n<p>除了在 omv web 的  <code>服务</code>  -&gt;  <code>SSH</code>  中禁用 root 登录外，还可以在用户配置上禁用 root 账号，使其无法使用登录（包括本机终端登录）。通过执行以下命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># 查看 root 帐号密码信息，第二个字符 P 表示有密码</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">passwd</span> <span class=\"token parameter variable\">-S</span> root</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre>root P 01/22/2024 <span class=\"token number\">0</span> <span class=\"token number\">99999</span> <span class=\"token number\">7</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># 删除 root 密码</span></pre></td></tr><tr><td data-num=\"6\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">passwd</span> <span class=\"token parameter variable\">-d</span> root</pre></td></tr><tr><td data-num=\"7\"></td><td data-command=\"\"></td><td><pre>passwd: password expiry information changed.</pre></td></tr><tr><td data-num=\"8\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># 确认删除密码，此时第二个字符为 NP 即 No Password</span></pre></td></tr><tr><td data-num=\"10\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">passwd</span> <span class=\"token parameter variable\">-S</span> root</pre></td></tr><tr><td data-num=\"11\"></td><td data-command=\"\"></td><td><pre>root NP 01/22/2024 <span class=\"token number\">0</span> <span class=\"token number\">99999</span> <span class=\"token number\">7</span> <span class=\"token parameter variable\">-1</span></pre></td></tr><tr><td data-num=\"12\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># 禁用锁定 root 帐号</span></pre></td></tr><tr><td data-num=\"14\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">passwd</span> <span class=\"token parameter variable\">-l</span> root</pre></td></tr><tr><td data-num=\"15\"></td><td data-command=\"\"></td><td><pre>passwd: password expiry information changed.</pre></td></tr><tr><td data-num=\"16\"></td><td data-command=\"\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\"># 确认删除密码，此时第二个字符为 L 即 Lock</span></pre></td></tr><tr><td data-num=\"18\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">passwd</span> <span class=\"token parameter variable\">-S</span> root</pre></td></tr><tr><td data-num=\"19\"></td><td data-command=\"\"></td><td><pre>root L 01/22/2024 <span class=\"token number\">0</span> <span class=\"token number\">99999</span> <span class=\"token number\">7</span> <span class=\"token parameter variable\">-1</span></pre></td></tr></table></figure></li>\n</ul>\n<p>note：</p>\n<p>关于查看  <code>sudo</code>  执行操作信息，可通过  <code>cat /var/log/auth.log</code>  命令查看，对于文件内大量出现  <code>pam_unix(cron:session): session opened for user root by (uid=0)</code>  的解决办法，通过以下操作滤除信息：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">vim</span> /etc/pam.d/common-session-noninteractive</pre></td></tr></table></figure><p>找到下行：</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>session required        pam_unix.so</pre></td></tr></table></figure><p>在其上一行添加：</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>session     [success=1 default=ignore] pam_succeed_if.so service in cron quiet use_uid</pre></td></tr></table></figure><p>保存退出后，重启 crond 服务：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] #\"></td><td><pre><span class=\"token function\">service</span> <span class=\"token function\">cron</span> restart</pre></td></tr></table></figure><p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vYXp1cmVvbG9neS9wLzE1MTE0Njg2Lmh0bWw=\">auth.log 大量出现 pam_unix (cron:session): session opened for user root by (uid=0) 解决办法</span></p>\n",
            "tags": [
                "Linux",
                "nas"
            ]
        }
    ]
}