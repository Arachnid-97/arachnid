<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>命运转轮 • Posts by &#34;sql&#34; tag</title>
        <link>https://arachnid.cc</link>
        <description>不曾亏欠, 不曾辜负, 如此足矣</description>
        <language>zh-CN</language>
        <pubDate>Fri, 03 Feb 2023 20:44:39 +0800</pubDate>
        <lastBuildDate>Fri, 03 Feb 2023 20:44:39 +0800</lastBuildDate>
        <category>EDA</category>
        <category>history</category>
        <category>电子</category>
        <category>硬件设计</category>
        <category>C</category>
        <category>MCU</category>
        <category>Ubuntu</category>
        <category>git</category>
        <category>工具</category>
        <category>hexo</category>
        <category>gcc</category>
        <category>IDE</category>
        <category>Linux</category>
        <category>linux_c</category>
        <category>arm_linux</category>
        <category>imx6ull</category>
        <category>SQL</category>
        <category>JSON</category>
        <category>docker</category>
        <category>nas</category>
        <category>算法</category>
        <category>RTOS</category>
        <category>FreeRTOS</category>
        <category>DMX512</category>
        <category>modbus</category>
        <category>Modem</category>
        <item>
            <guid isPermalink="true">https://arachnid.cc/sqlite-summarize/</guid>
            <title>SQLite 知识整理</title>
            <link>https://arachnid.cc/sqlite-summarize/</link>
            <category>SQL</category>
            <pubDate>Fri, 03 Feb 2023 20:44:39 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;sqlite-类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sqlite-类型&#34;&gt;#&lt;/a&gt; SQLite 类型&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;1、存储类&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SQLite 存储类属性划分为以下几种类型：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;NULL&lt;/td&gt;
&lt;td&gt;表示该值为 NULL 值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;INTEGER&lt;/td&gt;
&lt;td&gt;无符号整型值，根据值的大小存储在 1、2、3、4、6 或 8 字节中。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;REAL&lt;/td&gt;
&lt;td&gt;浮点值，存储为 8 字节的 IEEE 浮点数字。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TEXT&lt;/td&gt;
&lt;td&gt;文本字符串，使用 UTF-8、UTF-16BE 或 UTF-16LE 编码方式存储。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BLOB&lt;/td&gt;
&lt;td&gt;存储 Blob 数据，该类型数据和输入数据完全相同。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;2、数据类型&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;布尔数据类型：&lt;br /&gt;
SQLite 并没有提供专门的布尔存储类型，取而代之的是存储整型 1 表示 true，0 表示 false。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;日期和时间数据类型：&lt;br /&gt;
和布尔类型一样，SQLite 也同样没有提供专门的日期时间存储类型，而是以 TEXT、REAL 和 INTEGER 类型分别不同的格式表示该类型，如：&lt;br /&gt;
&lt;strong&gt;TEXT&lt;/strong&gt; : &amp;quot;YYYY-MM-DD HH:MM:SS.SSS&amp;quot;。&lt;br /&gt;
&lt;strong&gt;REAL&lt;/strong&gt; ：以 Julian 日期格式存储。&lt;br /&gt;
&lt;strong&gt;INTEGER&lt;/strong&gt; ：以 Unix 时间形式保存数据值，即从 1970-01-01 00:00:00 到当前时间所流经的秒数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3、类型亲缘性（Type Affinity）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为了最大限度地提高 SQLite 和其他数据库引擎之间的兼容性，SQLite 支持 “类型亲缘性” 的概念。使其它 SQL 数据库引擎能在 SQLite 上运行；在表字段被声明之后，SQLite 都会根据该字段声明时的类型为其选择一种亲缘类型，当数据插入时，该字段的数据将会优先采用亲缘类型作为该值的存储方式，除非亲缘类型不匹配或无法转换当前数据到该亲缘类型，这样 SQLite 才会考虑其它更适合该值的类型存储该值。&lt;/p&gt;
&lt;p&gt;SQLite 3 数据库中支持分配的类型关联：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TEXT&lt;/li&gt;
&lt;li&gt;NUMERIC&lt;/li&gt;
&lt;li&gt;INTEGER&lt;/li&gt;
&lt;li&gt;REAL&lt;/li&gt;
&lt;li&gt;BLOB&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;决定规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果声明的类型包含字符串 “INT”，则它分配为  &lt;code&gt;INTEGER&lt;/code&gt;  。&lt;/li&gt;
&lt;li&gt;如果声明的类型包含任意字符串 “CHAR”、“CLOB” 或 “TEXT” 的关键字，则被分配为  &lt;code&gt;TEXT&lt;/code&gt;  。请注意，VARCHAR 类型包含字符串 “CHAR”，因此被分配为  &lt;code&gt;TEXT&lt;/code&gt;  。&lt;/li&gt;
&lt;li&gt;如果声明的类型包含字符串 “BLOB”，或者如果未指定类型，则被分配为  &lt;code&gt;BLOB&lt;/code&gt;  。&lt;/li&gt;
&lt;li&gt;如果声明的类型包含任意字符串 “REAL”、“FLOA” 或 “DOUB” 的关键字，则被分配为  &lt;code&gt;REAL&lt;/code&gt;  。&lt;/li&gt;
&lt;li&gt;其余情况下，归类为  &lt;code&gt;NUMERIC&lt;/code&gt;  。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;note：请注意，确定类型亲缘性的规则顺序很重要。声明类型为 “CHARINT” 的字段将同时匹配规则 1 和 2，但第一条规则采用优先权，所以会被分配为  &lt;code&gt;INTEGER&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;声明的类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;类型亲缘性&lt;/th&gt;
&lt;th&gt;规则优先级&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;INT &amp;lt;br/&amp;gt;INTEGER &amp;lt;br/&amp;gt;TINYINT &amp;lt;br/&amp;gt;SMALLINT &amp;lt;br/&amp;gt;MEDIUMINT &amp;lt;br/&amp;gt;BIGINT &amp;lt;br/&amp;gt;UNSIGNED &amp;lt;br/&amp;gt;BIG &amp;lt;br/&amp;gt;INT &amp;lt;br/&amp;gt;INT2 &amp;lt;br/&amp;gt;INT8&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;INTEGER&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;CHARACTER(20) &amp;lt;br/&amp;gt;VARCHAR(255) &amp;lt;br/&amp;gt;VARYING &amp;lt;br/&amp;gt;CHARACTER(255) &amp;lt;br/&amp;gt;NCHAR(55) &amp;lt;br/&amp;gt;NATIVE &amp;lt;br/&amp;gt;CHARACTER(70) &amp;lt;br/&amp;gt;NVARCHAR(100) &amp;lt;br/&amp;gt;TEXT &amp;lt;br/&amp;gt;CLOB&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;TEXT&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;BLOB &amp;lt;br/&amp;gt;&lt;em&gt;no datatype specified&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;BLOB&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;REAL &amp;lt;br/&amp;gt;DOUBLE &amp;lt;br/&amp;gt;DOUBLE &amp;lt;br/&amp;gt;PRECISION &amp;lt;br/&amp;gt;FLOAT&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;REAL&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;NUMERIC &amp;lt;br/&amp;gt;DECIMAL(10,5) &amp;lt;br/&amp;gt;BOOLEAN &amp;lt;br/&amp;gt;DATE &amp;lt;br/&amp;gt;DATETIME&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;NUMERIC&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;数据表查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据表查询&#34;&gt;#&lt;/a&gt; 数据表查询&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;1、查看所有表名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SELECT * FROM sqlite_master WHERE type=&#39;table&#39; ORDER BY name;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;sqlite_master 是一个特殊表，属于系统表；存放在根页中，每一个数据库的  &lt;code&gt;.db&lt;/code&gt;  文件都有一个 sqlite_master 表。该表存放了  &lt;code&gt;.db&lt;/code&gt;  中所有表的相关信息，并只有只读权限，写操作由系统自动执行，使用者没有写的执行权限；其结构如下：&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;CREATE TABLE &lt;span class=&#34;token function&#34;&gt;sqlite_master&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    type TEXT&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 记录项目的类型，如：表 (table), 索引 (index), 视图 (view), 触发器 (trigger)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name TEXT&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 记录项目的名称，如表名、索引名等&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    tbl_name TEXT&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 记录所从属的表名，如索引所在的表名。对于表来说，该列就是表名本身&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    rootpage INTEGER&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 记录项目在数据库页中存储的编号。对于视图和触发器，该列值为 0 或者 NULL&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sql TEXT &lt;span class=&#34;token comment&#34;&gt;// 记录创建该项目的 SQL 语句&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;2、查看表的字段&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PRAGMA table_info(table_name);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中 [table_name] 为待查数据表名。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、查看整表数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SELECT * FROM table_name;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中 [table_name] 为待查数据表名。&lt;/p&gt;
&lt;p&gt;note：参数传入，字符串用单引号包括。&lt;/p&gt;
&lt;h1 id=&#34;c-c-接口函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#c-c-接口函数&#34;&gt;#&lt;/a&gt; C / C++ 接口函数&lt;/h1&gt;
&lt;h2 id=&#34;errors-码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#errors-码&#34;&gt;#&lt;/a&gt; Errors 码&lt;/h2&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_OK&lt;/span&gt;           &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 成功 */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* 错误码 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_ERROR&lt;/span&gt;        &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* sql 错误或丢失的数据库，SQL error or missing database */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_INTERNAL&lt;/span&gt;     &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* sqlite 内部逻辑错误，Internal logic error in SQLite */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_PERM&lt;/span&gt;         &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 拒绝访问，Access permission denied */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_ABORT&lt;/span&gt;        &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 回调函数请求取消操作，Callback routine requested an abort */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_BUSY&lt;/span&gt;         &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 数据库文件被锁定，The database file is locked */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_LOCKED&lt;/span&gt;       &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 数据库的一个表被锁定，A table in the database is locked */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_NOMEM&lt;/span&gt;        &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 某次 malloc 函数调用失败，A malloc () failed */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_READONLY&lt;/span&gt;     &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 尝试写入一个只读数据库，Attempt to write a readonly database */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_INTERRUPT&lt;/span&gt;    &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 操作 sqlite3_interrupt 函数被中断，Operation terminated by sqlite3_interrupt ()*/&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_IOERR&lt;/span&gt;       &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 发生磁盘 I/O 错误，Some kind of disk I/O error occurred */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_CORRUPT&lt;/span&gt;     &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 数据库磁盘映像不正确，The database disk image is malformed */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_NOTFOUND&lt;/span&gt;    &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 找不到表或记录，NOT USED. Table or record not found */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_FULL&lt;/span&gt;        &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 数据库满而插入失败，Insertion failed because database is full */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_CANTOPEN&lt;/span&gt;    &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 无法打开数据库，Unable to open the database file */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_PROTOCOL&lt;/span&gt;    &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;15&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 数据库锁定协议错误，NOT USED. Database lock protocol error */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_EMPTY&lt;/span&gt;       &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 数据库为空，Database is empty */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_SCHEMA&lt;/span&gt;      &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;17&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 数据库结构发生改变，The database schema changed */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_TOOBIG&lt;/span&gt;      &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;18&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 数据大小超限，String or BLOB exceeds size limit */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_CONSTRAINT&lt;/span&gt;  &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;19&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 约束违反，Abort due to constraint violation */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_MISMATCH&lt;/span&gt;    &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 数据类型不匹配，Data type mismatch */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_MISUSE&lt;/span&gt;      &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;21&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 库使用不正确，Library used incorrectly */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_NOLFS&lt;/span&gt;       &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;22&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 使用了操作系统不支持的功能，Uses OS features not supported on host */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_AUTH&lt;/span&gt;        &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 授权失败，Authorization denied */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_FORMAT&lt;/span&gt;      &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;24&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 附加数据库格式错误，Auxiliary database format error */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_RANGE&lt;/span&gt;       &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* sqlite3_bind 的第 2 给参数超出范围，2nd parameter to sqlite3_bind out of range */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_NOTADB&lt;/span&gt;      &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;26&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* 不是数据库文件，File opened that is not a database file */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_NOTICE&lt;/span&gt;      &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;27&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* Notifications from sqlite3_log() */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_WARNING&lt;/span&gt;     &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;28&lt;/span&gt;   &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* Warnings from sqlite3_log() */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_ROW&lt;/span&gt;         &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;  &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* sqlite3_step 产生一个就绪行，sqlite3_step () has another row ready */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;SQLITE_DONE&lt;/span&gt;        &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;101&lt;/span&gt;  &lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/* sqlite3_step 执行完成，sqlite3_step () has finished executing */&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;api-函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#api-函数&#34;&gt;#&lt;/a&gt; API 函数&lt;/h2&gt;
&lt;p&gt;以下只列举嵌入式环境下常用的 API：&lt;/p&gt;
&lt;h3 id=&#34;sqlite3_open&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sqlite3_open&#34;&gt;#&lt;/a&gt; sqlite3_open&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;filename&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;/* Database filename (UTF-8) */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  sqlite3 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;ppDb          &lt;span class=&#34;token comment&#34;&gt;/* OUT: SQLite db handle */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;该函数用于打开由  &lt;code&gt;filename&lt;/code&gt;  参数指定的 SQLite 数据库文件，并返回一个  &lt;code&gt;*ppDb&lt;/code&gt;  数据库连接句柄，即使发生错误； &lt;code&gt;filename&lt;/code&gt;  为 UTF-8 编码，如果 SQLite 无法分配内存来保存 sqlite3 对象，则会在  &lt;code&gt;*ppDb&lt;/code&gt;  中写入一个 NULL，而不是指向 sqlite3 对象的指针。如果数据库成功打开，则返回 SQLITE_OK。否则返回错误代码。sqlite3_errmsg () 可用于获取任何 sqlite3_open () 执行失败后错误的英文描述。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;filename&lt;/code&gt;  参数是  &lt;code&gt;&#39;:memory:&#39;&lt;/code&gt;  ，那么 sqlite3_open () 将会在 RAM 中创建一个内存数据库，这只会在数据库连接关闭前持续。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;filename&lt;/code&gt;  参数是  &lt;code&gt;&#39;&#39;&lt;/code&gt;  （空字符串），则将创建一个专用的临时磁盘数据库；一旦数据库连接关闭，此专用数据库将被自动删除。&lt;/p&gt;
&lt;h3 id=&#34;sqlite3_close&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sqlite3_close&#34;&gt;#&lt;/a&gt; sqlite3_close&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sqlite3&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;该函数与 sqlite3_open 函数相对应，用于关闭之前调用 sqlite3_open () 打开的数据库连接，此时所有与连接相关的语句都应在连接关闭之前完成。&lt;/p&gt;
&lt;p&gt;如果还有查询没有完成，sqlite3_close () 将返回 SQLITE_BUSY 禁止关闭的错误消息；当成功执行，将销毁 sqlite3 对象并释放所有关联资源时返回 SQLITE_OK。&lt;/p&gt;
&lt;h3 id=&#34;sqlite3_exec&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sqlite3_exec&#34;&gt;#&lt;/a&gt; sqlite3_exec&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_exec&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  sqlite3&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;                                  &lt;span class=&#34;token comment&#34;&gt;/* An open database */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;sql&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;                           &lt;span class=&#34;token comment&#34;&gt;/* SQL to be evaluated */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;callback&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;/* Callback function */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;                                    &lt;span class=&#34;token comment&#34;&gt;/* 1st argument to callback */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;errmsg                              &lt;span class=&#34;token comment&#34;&gt;/* Error msg written here */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;sqlite3_exec () 提供了一个执行 SQL 命令的快捷方式，SQL 命令由  &lt;code&gt;*sql&lt;/code&gt;  参数提供；它是 sqlite3_prepare_v2 () 、sqlite3_step () 和 sqlite3_finalize () 的包装函数，允许应用程序运行多个 SQL 语句，而无需编写大量 C 代码。&lt;/p&gt;
&lt;p&gt;sqlite3_exec () 程序解析并执行由  &lt;code&gt;*sql&lt;/code&gt;  参数所给的每个命令，直到字符串结束或者遇到错误为止。此参数等同于使用 shell 实现所有的 sqlite 功能命令，所以这个  &lt;code&gt;*sql&lt;/code&gt;  就是对应 sqlite 功能命令的 “字符串”。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;callback&lt;/code&gt;  是执行  &lt;code&gt;*sql&lt;/code&gt;  对应的功能命令后，所调取的函数，即回调函数；用于将执行结果进行分析处理。其原型如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;typedef int (*sqlite3_callback)(void *data, int argc, char **argv, char **azColName);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;sqlite3_callback&lt;/strong&gt; 参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;data：由 sqlite3_exec 传入的参数  &lt;code&gt;void*&lt;/code&gt;  ，或者说是指针参数。&lt;/li&gt;
&lt;li&gt;argc：查询到的这一条记录由多少个字段（多少列）。&lt;/li&gt;
&lt;li&gt;argv：该参数是双指针，查询出来的数据都保存在这里，它是一个一维数组，每一个元素都是一个  &lt;code&gt;char*&lt;/code&gt;   , 是一个字段内容，所以这个参数就可以不是单字节，而是可以为字符串等不定长度的数值，用字符串表示，以  &lt;code&gt;&#39;\0&#39;&lt;/code&gt;  结尾。&lt;/li&gt;
&lt;li&gt;azColName：该参数是双指针，与  &lt;code&gt;argv&lt;/code&gt;  是对应的，表示这个字段的字段名称。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;note：除  &lt;code&gt;data&lt;/code&gt;  传入参数外，回调函数的其它参数一定是 SQL 命令执行结果的进一步处理；此外，需要特别注意的是：回调函数多数时候不是执行 1 次，而是会循环执行 n 次，例如当我们执行 SELECT 命令时，往往输出的结果会是多行，假设有 n 行，那么就会执行 n 次回调函数。&lt;/p&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;stdio.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&amp;lt;sqlite3.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;callback&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;NotUsed&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; argc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;argv&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;azColName&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;argc&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%s = %s\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; azColName&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; argv&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; argv&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;NULL&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; argc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;argv&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  sqlite3 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;zErrMsg &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; rc&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; argc&lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Usage: %s DATABASE SQL-STATEMENT\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; argv&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  rc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;argv&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; rc &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Can&#39;t open database: %s\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_errmsg&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;sqlite3_close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  rc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_exec&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; argv&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; callback&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;zErrMsg&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; rc&lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt;SQLITE_OK &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SQL error: %s\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; zErrMsg&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;sqlite3_free&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;zErrMsg&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;sqlite3_close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;sqlite3_get_table&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sqlite3_get_table&#34;&gt;#&lt;/a&gt; sqlite3_get_table&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_get_table&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  sqlite3 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;          &lt;span class=&#34;token comment&#34;&gt;/* An open database */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;zSql&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;/* SQL to be evaluated */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;pazResult&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;/* Results of the query */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;pnRow&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;/* Number of result rows written here */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;pnColumn&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;/* Number of result columns written here */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;pzErrmsg       &lt;span class=&#34;token comment&#34;&gt;/* Error msg written here */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在最新的文档中，表明这该函数是一个传统的 API，保留该 API 是为了向后兼容；因此，不建议使用此接口。&lt;/p&gt;
&lt;p&gt;输入参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;db：打开数据库文件后返回的句柄。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;zSql：需要执行的 SQL 命令字符串。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pazResult：对字符串数组的引用。使用此引用传回查询结果。传回的值必须通过调用  &lt;code&gt;sqlite3_free_table()&lt;/code&gt;  。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pnRow：查询返回的行数，不包括列名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pnColumn：查询返回的列数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pzErrmsg：对字符串的可选引用。如果发生错误，引用将被设置为一条错误消息。该应用程序负责 释放的消息  &lt;code&gt;sqlite3_free()&lt;/code&gt;  。如果没有错误发生，引用将被设置为 NULL。引用可能为 NULL。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;和 sqlite3_exec () 这种使用回调函数的方式不同，sqlite3_get_table () 的功能要显得更加简便。它通过控制语句的传入，直接将参数赋值给指针传出。&lt;/p&gt;
&lt;p&gt;note：虽然 sqlite3_get_table () 的使用较于 sqlite3_exec () 更为简便，但官方不推荐使用的，在实际当中它更趋于用作测试 API，并且根据官方建议，推荐使用 sqlite3_prepare_v2 ()、sqlite3_column_xxx () 这些 API 组合。&lt;/p&gt;
&lt;h3 id=&#34;sqlite3_free_table&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sqlite3_free_table&#34;&gt;#&lt;/a&gt; sqlite3_free_table&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_free_table&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;该函数与 sqlite3_get_table 函数相对应，在应用程序完成 sqlite3_get_table 的结果使用后，它必须将查询结果的指针  &lt;code&gt;pazResult&lt;/code&gt;  传递给 sqlite3_free_table () 以释放分配的内存。&lt;/p&gt;
&lt;h3 id=&#34;sqlite3_prepare_v2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sqlite3_prepare_v2&#34;&gt;#&lt;/a&gt; sqlite3_prepare_v2&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_prepare_v2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  sqlite3 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;            &lt;span class=&#34;token comment&#34;&gt;/* Database handle */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;zSql&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;       &lt;span class=&#34;token comment&#34;&gt;/* SQL statement, UTF-8 encoded */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; nByte&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;              &lt;span class=&#34;token comment&#34;&gt;/* Maximum length of zSql in bytes. */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  sqlite3_stmt &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;ppStmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;/* OUT: Statement handle */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;pzTail     &lt;span class=&#34;token comment&#34;&gt;/* OUT: Pointer to unused portion of zSql */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;输入参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;db：从先前成功调用 sqlite3_open（）、sqlite3_open v2（）或 sqlite3_open16（）获得的 SQLite 数据库。&lt;/li&gt;
&lt;li&gt;zSql：要执行的 SQL 语句（可以包含未赋值的变量）&lt;/li&gt;
&lt;li&gt;nByte：如果  &lt;code&gt;nByte&lt;/code&gt;  参数为负，则  &lt;code&gt;zSql&lt;/code&gt;  被读取到第一个空结束终止符。如果  &lt;code&gt;nByte&lt;/code&gt;  为正，则它是从  &lt;code&gt;zSql&lt;/code&gt;  读取的字节数。&lt;/li&gt;
&lt;li&gt;ppStmt：解析编译出的 SQL 语句实例。&lt;/li&gt;
&lt;li&gt;pzTail：如果  &lt;code&gt;pzTail&lt;/code&gt;  不为空，那么  &lt;code&gt;*pzTail&lt;/code&gt;  将指向  &lt;code&gt;zSql&lt;/code&gt;  中第一个 SQL 语句结束后的第一个字节。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sqlite3_bind_xxx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sqlite3_bind_xxx&#34;&gt;#&lt;/a&gt; sqlite3_bind_xxx&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_bind_blob&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;      sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; pidx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;          val&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;            bytes&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; mem_callback&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_bind_blob64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;    sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; pidx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;          val&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sqlite3_uint64 bytes&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; mem_callback&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_bind_double&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;    sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; pidx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;double&lt;/span&gt;               val&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_bind_int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;       sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; pidx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;                  val&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_bind_int64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;     sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; pidx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sqlite3_int64        val&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_bind_null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;      sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; pidx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_bind_text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;      sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; pidx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;          val&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;            bytes&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; mem_callback&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_bind_text16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;    sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; pidx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;          val&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;            bytes&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; mem_callback&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_bind_text64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;    sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; pidx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;          val&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sqlite3_uint64 bytes&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; mem_callback&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; encoding&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_bind_value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;     sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; pidx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; sqlite3_value&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; val&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// SQLITE_API int sqlite3_bind_pointer(   sqlite3_stmt*, int, void*, const char*,void(*)(void*));&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_bind_zeroblob&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;  sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; pidx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;                           &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;            bytes&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_bind_zeroblob64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; pidx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;                           sqlite3_uint64 bytes&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mem_callback&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; ptr &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;用于绑定任何参数值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;stmt：指向一个被 sqlite3_prepare_v2 () 等接口编译的语句句柄，它可被 sqlite3_step () 执行。最后用 sqlite3_finalize () 来释放它。&lt;/li&gt;
&lt;li&gt;pidx：SQL 参数（每列元素）的索引值，参数索引值从 1 开始。&lt;/li&gt;
&lt;li&gt;val：要绑定的数据值。&lt;/li&gt;
&lt;li&gt;bytes：数据值的大小，以字节（不是字符）为单位。通常，长度不包括任何空结束符。如果  &lt;code&gt;val&lt;/code&gt;  是一个以空结束的字符串，把该值设为为负值（-1），则会自动计算长度。&lt;/li&gt;
&lt;li&gt;mem_callback：一个指向内存释放函数的函数指针。此函数用于在 SQLite 处理完 BLOB 或 string 之后对其进行处理，主要用来释放  &lt;code&gt;val&lt;/code&gt;  的内存缓冲区；如果缓冲区是用 sqlite3_malloc () 分配的，则可以直接传递对 sqlite3_free () 的引用。也可以使用特殊标志  &lt;code&gt;SQLITE_STATIC&lt;/code&gt;  和  &lt;code&gt;SQLITE_TRANSIENT&lt;/code&gt;  ； &lt;code&gt;SQLITE_STATIC&lt;/code&gt;  说明数据值为常量，位于静态的非托管空间中，不需要释放，而  &lt;code&gt;SQLITE_TRANSIENT&lt;/code&gt;  会使得对   &lt;code&gt;val&lt;/code&gt;  数据做一份拷贝。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sqlite3_step&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sqlite3_step&#34;&gt;#&lt;/a&gt; sqlite3_step&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_step&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在调用 sqlite3_prepare_v2 () 等接口编译的语句句柄后，必须调用此函数一次或多次以计算语句。&lt;/p&gt;
&lt;p&gt;返回值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SQLITE_BUSY：忙碌，数据库引擎无法锁定数据去完成其工作。可以重试该语句。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQLITE_DONE：意味着 SQL 语句执行完成且成功。一旦执行成功后，sqlite3_step () 就不应该被再次调用执行，除非我们使用 sqlite3_reset () 重置  &lt;code&gt;sqlite3_stmt&lt;/code&gt;  数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQLITE_ROW：当返回的行数据较多时会出现，代表获得了一条有效数据行，此时可以通过 sqlite3_column_xxx 函数来取得数据；再次调用 sqlite3_step () 可取得下一条查询结果，直至返回  &lt;code&gt;SQLITE_DONE&lt;/code&gt;  。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQLITE_ERROR：表示发生了运行时错误（例如约束冲突），此时可以通过 sqlite3_errmmsg () 取得相关的错误信息，并且不应再次调用 sqlite3_step () 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQLITE_MISUSE：意味着这个例程被不适当地调用。可能是在已完成的准备好的语句上调用的，也可能是在以前返回  &lt;code&gt;SQLITE_ERROR&lt;/code&gt;  或  &lt;code&gt;SQLITE_DONE&lt;/code&gt;  的语句上调用的。或者可能是同一数据库连接同时被两个或多个线程使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sqlite3_column_xxx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sqlite3_column_xxx&#34;&gt;#&lt;/a&gt; sqlite3_column_xxx&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;          &lt;span class=&#34;token function&#34;&gt;sqlite3_column_blob&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;  sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; cidx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;double&lt;/span&gt;               &lt;span class=&#34;token function&#34;&gt;sqlite3_column_double&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; cidx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;                  &lt;span class=&#34;token function&#34;&gt;sqlite3_column_int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;    sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; cidx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API sqlite3_int64        &lt;span class=&#34;token function&#34;&gt;sqlite3_column_int64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;  sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; cidx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_column_text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;  sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; cidx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;          &lt;span class=&#34;token function&#34;&gt;sqlite3_column_text16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; cidx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API sqlite3_value&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;       &lt;span class=&#34;token function&#34;&gt;sqlite3_column_value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; cidx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;                  &lt;span class=&#34;token function&#34;&gt;sqlite3_column_bytes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;  sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; cidx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;                  &lt;span class=&#34;token function&#34;&gt;sqlite3_column_bytes16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; cidx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;                  &lt;span class=&#34;token function&#34;&gt;sqlite3_column_type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;   sqlite3_stmt&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; cidx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;用于从当前结果行中提取列值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;stmt：指向一个被 sqlite3_prepare_v2 () 等接口编译的语句句柄，它可被 sqlite3_step () 执行。最后用 sqlite3_finalize () 来释放它。&lt;/li&gt;
&lt;li&gt;cidx：SQL 参数（每列元素）的索引值，参数索引值从 0 开始。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回结果：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;API 函数&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;结果值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;sqlite3_column_blob&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;→&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;BLOB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;sqlite3_column_double&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;→&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;REAL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;sqlite3_column_int&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;→&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;32 位 INTEGER&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;sqlite3_column_int64&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;→&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;64 位 INTEGER&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;sqlite3_column_text&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;→&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;UTF-8 TEXT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;sqlite3_column_text16&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;→&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;UTF-16 TEXT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;sqlite3_column_value&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;→&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;作为 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc3FsaXRlLm9yZy9jM3JlZi92YWx1ZS5odG1s&#34;&gt;未受保护的 sqlite3_value&lt;/span&gt; 对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;sqlite3_column_bytes&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;→&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;BLOB 或 UTF-8 TEXT 的字节大小&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;sqlite3_column_bytes16&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;→&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;UTF-16 TEXT 的字节大小&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;sqlite3_column_type&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;→&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;默认数据的类型&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;sqlite3_reset&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sqlite3_reset&#34;&gt;#&lt;/a&gt; sqlite3_reset&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SQLITE_API &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_reset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sqlite3_stmt &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;pStmt&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;用于重置  &lt;code&gt;sqlite3_stmt&lt;/code&gt;  数据，然后准备被重新执行。任何使用 sqlite3_bind_xxx 函数将值绑定到它们的 SQL 语句变量都将保留它们的值。使用 sqlite3_clear_bindings () 重置绑定。&lt;/p&gt;
&lt;p&gt;返回值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SQLITE_BUSY&lt;/li&gt;
&lt;li&gt;SQLITE_DONE&lt;/li&gt;
&lt;li&gt;SQLITE_ROW&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;操作流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#操作流程&#34;&gt;#&lt;/a&gt; 操作流程&lt;/h2&gt;
&lt;p&gt;使用 SQLite 数据库，最典型的函数操作流程（伪代码）：&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;span&gt;伪代码&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* create a statement from an SQL string */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sqlite3_stmt &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;stmt &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_prepare_v2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; db&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sql_str&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; sql_str_len&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;NULL&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; SQLITE_OK &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/* use the statement as many times as required */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;/* bind any parameter values */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;sqlite3_bind_xxx&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; param_idx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; param_value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;/* execute statement and step over each row of the result set */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_step&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; stmt &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; SQLITE_ROW &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;/* extract column values from the current result row */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            col_val &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sqlite3_column_xxx&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; stmt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; col_index &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;/* reset the statement so it may be used again */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;sqlite3_reset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; stmt &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;sqlite3_clear_bindings&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; stmt &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;/* optional */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* destroy and release the statement */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sqlite3_finalize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; stmt &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;a、 &lt;code&gt;sqlite3_prepare&lt;/code&gt;  创建一个预处理对象。&lt;/p&gt;
&lt;p&gt;b、 &lt;code&gt;sqlite3_bind_xxx&lt;/code&gt;  绑定参数。&lt;/p&gt;
&lt;p&gt;c、循环执行  &lt;code&gt;sqlite3_step&lt;/code&gt;  获取数据。&lt;/p&gt;
&lt;p&gt;d、 &lt;code&gt;sqlite3_column&lt;/code&gt;  从数据中取出每一段。&lt;/p&gt;
&lt;p&gt;e、释放  &lt;code&gt;sqlite3_finalize&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、插入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sqlite3_open&lt;/code&gt;  -&amp;gt;  &lt;code&gt;sqlite3_prepare_v2&lt;/code&gt;  -&amp;gt;  &lt;code&gt;sqlite3_bind_xxx&lt;/code&gt;  -&amp;gt;  &lt;code&gt;sqlite3_step&lt;/code&gt;  -&amp;gt;  &lt;code&gt;sqlite3_reset&lt;/code&gt;  -&amp;gt;  &lt;code&gt;sqlite3_finalize&lt;/code&gt;  -&amp;gt;  &lt;code&gt;sqlite3_close&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、查询&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sqlite3_open&lt;/code&gt;  -&amp;gt;  &lt;code&gt;sqlite3_prepare_v2&lt;/code&gt;  -&amp;gt;  &lt;code&gt;sqlite3_step&lt;/code&gt;  -&amp;gt;  &lt;code&gt;sqlite3_column_xxx&lt;/code&gt;  -&amp;gt;  &lt;code&gt;sqlite3_finalize&lt;/code&gt;  -&amp;gt;  &lt;code&gt;sqlite3_close&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、例子&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;略略略&lt;/p&gt;
&lt;h1 id=&#34;常用命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用命令&#34;&gt;#&lt;/a&gt; 常用命令&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;1、筛选删除最早的 n 项记录，或留下最新的 n 项记录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you use an auto-increment field, you can easily write this to delete the oldest 100 records:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DELETE FROM mytable WHERE id IN (SELECT id FROM mytable ORDER BY id ASC LIMIT 100)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or, if no such field is present, use  &lt;code&gt;ROWID&lt;/code&gt;  :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DELETE FROM mytable WHERE ROWID IN (SELECT ROWID FROM mytable ORDER BY ROWID ASC LIMIT 100)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or, to leave only the latest 1000 records:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DELETE FROM mytable WHERE ROWID IN (SELECT ROWID FROM mytable ORDER BY ROWID DESC LIMIT -1 OFFSET 1000)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;2、字符串中特殊字符自动转义处理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For example, assume the string variable zText contains text as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;char *zText = &amp;quot;It&#39;s a happy day!&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;One can use this text in an SQL statement as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;char *zSQL = sqlite3_mprintf(&amp;quot;INSERT INTO table VALUES(&#39;%q&#39;)&amp;quot;, zText);
sqlite3_exec(db, zSQL, 0, 0, 0);
sqlite3_free(zSQL);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Because the %q format string is used, the &#39;&#39;&#39; character in zText is escaped and the SQL generated is as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;INSERT INTO table1 VALUES(&#39;It&#39;&#39;s a happy day!&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is correct. Had we used %s instead of %q, the generated SQL would have looked like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;INSERT INTO table1 VALUES(&#39;It&#39;s a happy day!&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This second example is an SQL syntax error. As a general rule you should always use %q instead of %s when inserting text into a string literal.&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考&#34;&gt;#&lt;/a&gt; 参考&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcWxpdGUub3JnL2NpbnRyby5odG1s&#34;&gt;An Introduction To The SQLite C/C++ Interface&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcWxpdGUub3JnL2NhcGkzcmVmLmh0bWw=&#34;&gt;C-language Interface Specification for SQLite&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc3FsaXRlLm9yZy9kYXRhdHlwZTMuaHRtbA==&#34;&gt;Datatypes In SQLite&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3JlaWxseS5jb20vbGlicmFyeS92aWV3L3VzaW5nLXNxbGl0ZS85NzgxNDQ5Mzk0NTkyL3JlMjI5Lmh0bWw=&#34;&gt;Using sqlite3_bind_xxx()&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3JlaWxseS5jb20vbGlicmFyeS92aWV3L3VzaW5nLXNxbGl0ZS85NzgxNDQ5Mzk0NTkyL3JlMjQ0Lmh0bWw=&#34;&gt;Using sqlite3_column_xxx()&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcWxpdGUub3JnL3F1aWNrc3RhcnQuaHRtbA==&#34;&gt;Write Programs That Use SQLite&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82OTEyNjk5NjEzODEyMDk3MDMxI2hlYWRpbmctMjE=&#34;&gt;SQLite 常用 API (C)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzY2NzA4NS9kZWxldGUtb2xkZXN0LXJlY29yZHMtZnJvbS1kYXRhYmFzZQ==&#34;&gt;Delete oldest records from database&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZkb2MubmV0L2RhdGFiYXNlL3NxbGl0ZS0zLjAuNy4yL2MzcmVmL21wcmludGYuaHRtbA==&#34;&gt;Formatted String Printing Functions&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
